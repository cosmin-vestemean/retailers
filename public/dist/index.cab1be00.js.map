{"mappings":"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","sources":["src/client.js"],"sourcesContent":["console.log('Client.js loaded')\r\n\r\n//const socket = io('https://retailers-ac9953f6caca.herokuapp.com')\r\nconst socket = io('www.retailers.acct.ro')\r\nconst client = feathers()\r\nconst socketClient = feathers.socketio(socket)\r\n\r\nclient.configure(socketClient)\r\n\r\nclient.use('sftp', socketClient.service('sftp'), {\r\n  methods: ['downloadXml', 'storeXmlInDB', 'uploadXml'],\r\n  events: ['uploadResult']\r\n})\r\n\r\nclient.use('storeXml', socketClient.service('storeXml'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('CCCDOCUMENTES1MAPPINGS', socketClient.service('CCCDOCUMENTES1MAPPINGS'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('CCCXMLS1MAPPINGS', socketClient.service('CCCXMLS1MAPPINGS'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('CCCRETAILERSCLIENTS', socketClient.service('CCCRETAILERSCLIENTS'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('connectToS1', socketClient.service('connectToS1'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('setDocument', socketClient.service('setDocument'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('getDataset', socketClient.service('getDataset'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('getS1ObjData', socketClient.service('getS1ObjData'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.use('getS1SqlData', socketClient.service('getS1SqlData'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\n//getInvoiceDom\r\nclient.use('getInvoiceDom', socketClient.service('getInvoiceDom'), {\r\n  methods: ['find', 'get', 'create', 'update', 'patch', 'remove']\r\n})\r\n\r\nclient.service('sftp').on('uploadResult', (data) => {\r\n  console.log('uploadResult', data)\r\n})\r\n\r\nvar url = '',\r\n  username = '',\r\n  passphrase = '',\r\n  privateKey = '',\r\n  fingerprint = ''\r\n\r\nfunction getRetailerConfData() {\r\n  var localStorageRetailer\r\n  try {\r\n    localStorageRetailer = parseInt(localStorage.getItem('trdr_retailer'))\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  client\r\n    .service('CCCSFTP')\r\n    .find({\r\n      query: {\r\n        TRDR_RETAILER: localStorageRetailer\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(res)\r\n      //URL\r\n      document.getElementById('URL').value = res.data[0].URL\r\n      //PORT\r\n      document.getElementById('PORT').value = res.data[0].PORT\r\n      //USERNAME\r\n      document.getElementById('USERNAME').value = res.data[0].USERNAME\r\n      //PASSPHRASE\r\n      document.getElementById('PASSPHRASE').value = res.data[0].PASSPHRASE\r\n      privateKey = res.data[0].PRIVATEKEY\r\n      document.getElementById('FINGERPRINT').value = res.data[0].FINGERPRINT\r\n      document.getElementById('TRDR_RETAILER').value = res.data[0].TRDR_RETAILER\r\n      //INITIALDIRIN\r\n      document.getElementById('INITIALDIRIN').value = res.data[0].INITIALDIRIN\r\n      //INITIALDIROUT\r\n      document.getElementById('INITIALDIROUT').value = res.data[0].INITIALDIROUT\r\n    })\r\n}\r\n\r\nfunction setRetailerId(trdr, urlLogo) {\r\n  localStorage.setItem('trdr_retailer', trdr)\r\n  localStorage.setItem('logo_retailer', urlLogo)\r\n  console.log('Retailer id set to ', parseInt(localStorage.getItem('trdr_retailer')))\r\n}\r\n\r\nfunction updateRetailerConfData() {\r\n  //URL\r\n  url = document.getElementById('URL').value\r\n  //PORT\r\n  port = document.getElementById('PORT').value\r\n  //USERNAME\r\n  username = document.getElementById('USERNAME').value\r\n  //PASSPHRASE\r\n  passphrase = document.getElementById('PASSPHRASE').value\r\n  //FINGERPRINT\r\n  fingerprint = document.getElementById('FINGERPRINT').value\r\n  //TRDR_RETAILER\r\n  trdr_retailer = document.getElementById('TRDR_RETAILER').value\r\n  //INITIALDIRIN\r\n  initialdirin = document.getElementById('INITIALDIRIN').value\r\n  //INITIALDIROUT\r\n  initialdirout = document.getElementById('INITIALDIROUT').value\r\n\r\n  client\r\n    .service('CCCSFTP')\r\n    .update(\r\n      {\r\n        query: {\r\n          TRDR_RETAILER: trdr_retailer\r\n        }\r\n      },\r\n      (data = {\r\n        URL: url,\r\n        PORT: port,\r\n        USERNAME: username,\r\n        PASSPHRASE: passphrase,\r\n        FINGERPRINT: fingerprint,\r\n        INITIALDIRIN: initialdirin,\r\n        INITIALDIROUT: initialdirout\r\n      })\r\n    )\r\n    .then((res) => {\r\n      console.log(res)\r\n    })\r\n}\r\n\r\nasync function getRetailerXMLData(retailer) {\r\n  return new Promise((resolve, reject) => {\r\n    client\r\n      .service('CCCSFTPXML')\r\n      .find({\r\n        query: {\r\n          TRDR_RETAILER: retailer,\r\n          $limit: 200,\r\n          $sort: {\r\n            XMLDATE: -1\r\n          }\r\n        }\r\n      })\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n  })\r\n}\r\n\r\nfunction getClientConfData() {\r\n  //CCCRETAILERSCLIENTS\r\n  client\r\n    .service('CCCRETAILERSCLIENTS')\r\n    .find({ query: { TRDR_CLIENT: 1 } })\r\n    .then((res) => {\r\n      //WSURL\r\n      document.getElementById('WSURL').value = res.data[0].WSURL\r\n      //LOGINCOMPANY\r\n      document.getElementById('LOGINCOMPANY').value = res.data[0].COMPANY\r\n      //BRANCH\r\n      document.getElementById('LOGINBRANCH').value = res.data[0].BRANCH\r\n      //LOGINUSER\r\n      document.getElementById('LOGINUSER').value = res.data[0].WSUSER\r\n      //LOGINPASS\r\n      document.getElementById('LOGINPASSWORD').value = res.data[0].WSPASS\r\n    })\r\n}\r\n\r\n//config_retailer section\r\nfunction openTab(evt, tabName) {\r\n  var i, x, tablinks\r\n  x = document.getElementsByClassName('content-tab')\r\n  for (i = 0; i < x.length; i++) {\r\n    x[i].style.display = 'none'\r\n  }\r\n  tablinks = document.getElementsByClassName('tab')\r\n  for (i = 0; i < x.length; i++) {\r\n    tablinks[i].className = tablinks[i].className.replace(' is-active', '')\r\n  }\r\n  document.getElementById(tabName).style.display = 'block'\r\n  evt.currentTarget.className += ' is-active'\r\n}\r\n\r\nfunction loadFile(event) {\r\n  var xml = event.target.files[0]\r\n  var reader = new FileReader()\r\n  reader.onload = function (e) {\r\n    var textArea = document.getElementById('xmlTextArea')\r\n    textArea.value = e.target.result\r\n    //loop iterates through the xml file and displays the content in the console\r\n    var parser = new DOMParser()\r\n    var xmlDoc = parser.parseFromString(e.target.result, 'text/xml')\r\n    //get main node from select id \"xmlRoot\"\r\n    var mainNode = document.getElementById('xmlRoot').value\r\n    var x = xmlDoc.getElementsByTagName(mainNode)\r\n    //loop recursivly through all nodes from main node \"Order\" and create an object with the values\r\n    var obj = xml2json(x[0])\r\n    console.log('xml2json', obj)\r\n\r\n    //get node name for lines; select id \"delimitareLinieDocument\"\r\n    var linesNode = document.getElementById('delimitareLinieDocument').value\r\n    //cut obj in two parts: header and lines; lines are in an array (obj.OrderLine)\r\n    var header = {}\r\n    var lines = []\r\n    console.log('header', header)\r\n    for (var i in obj) {\r\n      if (i == linesNode && obj[i].length > 0 && typeof obj[i] === 'object') {\r\n        lines = obj[i]\r\n      } else {\r\n        header[i] = obj[i]\r\n      }\r\n    }\r\n    var table = document.getElementById('xmlAsTable')\r\n    //delete innerHTML\r\n    table.innerHTML = ''\r\n    //add thead\r\n    addTableHeader(table)\r\n    var headerArrayOfObjects = []\r\n    var linesArrayOfObjects = []\r\n    recurse(header, [], mainNode, '#FFFAFC', '#0a0a0a', headerArrayOfObjects)\r\n    addRowsToTable(headerArrayOfObjects)\r\n    //recurse first line, no point to recurse through all lines, it's a reference for all lines\r\n    recurse(lines[0], [], mainNode + '/' + linesNode, '#eff5fb', '#0a0a0a', linesArrayOfObjects)\r\n    addRowsToTable(linesArrayOfObjects)\r\n  }\r\n\r\n  try {\r\n    reader.readAsText(xml)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nfunction addTableHeader(table) {\r\n  var thead = table.createTHead()\r\n  var row = thead.insertRow()\r\n  var cell0 = document.createElement('th')\r\n  cell0.innerHTML = 'XML Ord.'\r\n  cell0.className = 'xmlOrder'\r\n  row.appendChild(cell0)\r\n  var cell1 = document.createElement('th')\r\n  row.appendChild(cell1)\r\n  cell1.innerHTML = 'Pick'\r\n  //text orientation up\r\n  //cell1.style.writingMode = 'vertical-rl'\r\n  //cell1.style.textOrientation = 'upright'\r\n  var cell2 = document.createElement('th')\r\n  row.appendChild(cell2)\r\n  cell2.innerHTML = 'Req.'\r\n  //same\r\n  //cell2.style.writingMode = 'vertical-rl'\r\n  //cell2.style.textOrientation = 'upright'\r\n  var cell3 = document.createElement('th')\r\n  row.appendChild(cell3)\r\n  cell3.innerHTML = 'XML Path'\r\n  var cell4 = document.createElement('th')\r\n  row.appendChild(cell4)\r\n  cell4.innerHTML = 'S1 Table 1'\r\n  var cell5 = document.createElement('th')\r\n  row.appendChild(cell5)\r\n  cell5.innerHTML = 'S1 Field 1'\r\n  var cell6 = document.createElement('th')\r\n  row.appendChild(cell6)\r\n  cell6.innerHTML = 'S1 Table 2'\r\n  var cell7 = document.createElement('th')\r\n  row.appendChild(cell7)\r\n  cell7.innerHTML = 'S1 Field 2'\r\n  var cell8 = document.createElement('th')\r\n  row.appendChild(cell8)\r\n  cell8.innerHTML = 'SQL'\r\n  var cell9 = document.createElement('th')\r\n  row.appendChild(cell9)\r\n  cell9.innerHTML = 'Value'\r\n  //add column Observatii\r\n  var cell10 = document.createElement('th')\r\n  row.appendChild(cell10)\r\n  cell10.innerHTML = 'Observatii'\r\n  //make it prety and sticky\r\n  thead.style.backgroundColor = '#e6e6e6'\r\n  thead.style.fontWeight = 'bold'\r\n  thead.style.zIndex = '1'\r\n  //add hideUnselectedRows button on another row\r\n  row = thead.insertRow()\r\n  cell1 = document.createElement('th')\r\n  row.appendChild(cell1)\r\n  cell1.colSpan = 10\r\n  cell1.innerHTML = `<button id=\"hideUnselectedRows\" class=\"button is-small is-info\" onclick=\"hideUnselectedRows()\">Show/Hide unselected rows</button>`\r\n  //add 4 buttons on the same row; on click hide/show cells: 1. S1 Table 2, S1 Field 2, 2. Value, 3. Observatii\r\n  cell1.innerHTML += `<button id=\"hideS1Table2S1Field2\" class=\"button is-small is-info ml-2\" onclick=\"showHideCell(['S1 Table 2', 'S1 Field 2'], document.getElementById('xmlAsTable'))\">Show/Hide Table 2</button>`\r\n  cell1.innerHTML += `<button id=\"hideValue\" class=\"button is-small is-info ml-2\" onclick=\"showHideCell(['Value'], document.getElementById('xmlAsTable'))\">Show/Hide Value</button>`\r\n  cell1.innerHTML += `<button id=\"hideObservatii\" class=\"button is-small is-info ml-2\" onclick=\"showHideCell(['Observatii'], document.getElementById('xmlAsTable'))\">Show/Hide Observatii</button>`\r\n  //hide/show all the above buttons\r\n  cell1.innerHTML += `<button id=\"hideShowAll\" class=\"button is-small is-info ml-2\" onclick=\"showHideCell(['S1 Table 2', 'S1 Field 2', 'Value', 'Observatii'], document.getElementById('xmlAsTable'))\">Hide all</button>`\r\n  //add saveMapping button on the same row\r\n  cell1.innerHTML += `<button class=\"button is-small is-success ml-2\" onclick=\"saveMapping()\">Save mapping</button>`\r\n}\r\n\r\nfunction showHideCell(cellsByName, table) {\r\n  //show hide cells in table\r\n  var rowCount = table.rows.length\r\n  var cells = []\r\n  //look in thead for cells with name in cellsByName and retain index of cells\r\n  var thead = table.tHead\r\n  var row = thead.rows[0]\r\n  for (var i = 0; i < row.cells.length; i++) {\r\n    if (cellsByName.indexOf(row.cells[i].innerHTML) > -1) {\r\n      cells.push(i)\r\n    }\r\n  }\r\n\r\n  //search by index in tbody and show/hide cells\r\n  for (var i = 0; i < rowCount; i++) {\r\n    var row = table.rows[i]\r\n    for (var j = 0; j < cells.length; j++) {\r\n      var cell = row.cells[cells[j]]\r\n      try {\r\n        if (cell.style.display == 'none') {\r\n          cell.style.display = ''\r\n        } else {\r\n          cell.style.display = 'none'\r\n        }\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction recurse(obj, parent, root, color, color1, result) {\r\n  //recurse through the object and add rows to result\r\n  for (var i in obj) {\r\n    if (obj[i] !== null && typeof obj[i] === 'object') {\r\n      //detect if it is an array\r\n      if (Array.isArray(obj[i])) {\r\n        //change color for entire array\r\n        recurse(obj[i], parent.concat(i), root, color, '#3850b7', result)\r\n        //recurse first element of array\r\n        recurse(obj[i][0], parent.concat(i), root, color, '#cc0f35', result)\r\n      } else {\r\n        recurse(obj[i], parent.concat(i), root, color, color1, result)\r\n      }\r\n    } else {\r\n      //add row to table xmlAsTable\r\n      result.push({ obj, parent, root, i, color, color1 })\r\n    }\r\n  }\r\n}\r\n\r\nfunction addRowsToTable(arr) {\r\n  var table = document.getElementById('xmlAsTable')\r\n  //if body doesn't exist create it otherwise get it\r\n  var tbody = table.tBodies[0] ? table.tBodies[0] : table.createTBody()\r\n  arr.forEach((item) => {\r\n    var obj = item.obj\r\n    var parent = item.parent\r\n    var root = item.root\r\n    var i = item.i\r\n    var color = item.color\r\n    var color1 = item.color1\r\n    var row = tbody.insertRow()\r\n    //root as class name\r\n    row.className = root\r\n    var xmlOrder = row.insertCell()\r\n    //class\r\n    xmlOrder.className = 'xmlOrder'\r\n    xmlOrder.innerHTML = 0\r\n    var remains = row.insertCell()\r\n    var mandatory = row.insertCell()\r\n    var xmlPath = row.insertCell()\r\n    var s1Tbl1 = row.insertCell()\r\n    var s1Fld1 = row.insertCell()\r\n    var s1Tbl2 = row.insertCell()\r\n    var s1Fld2 = row.insertCell()\r\n    var sql = row.insertCell()\r\n    var value = row.insertCell()\r\n    //add column Observatii\r\n    var cell10 = row.insertCell()\r\n    //BuyerCustomerParty/PostalAddress/AdditionalStreetName\r\n    var xmlJoinBySlash = parent && parent.length > 0 ? parent.join('/') + '/' + i : i\r\n    //Order_BuyerCustomerParty_PostalAddress_AdditionalStreetName\r\n    var xmlJoinByUnderscore =\r\n      parent && parent.length > 0 ? root + '_' + parent.join('_') + '_' + i : root + '_' + i\r\n\r\n    //add column with checkbox \"Remaining\"\r\n    var input1 = document.createElement('input')\r\n    input1.type = 'checkbox'\r\n    input1.name = xmlJoinByUnderscore + '_Remaining'\r\n    input1.className = 'remaining checkbox is-small' //important, used in hideUnselectedRows()\r\n    input1.id = xmlJoinByUnderscore + '_Remaining'\r\n    remains.appendChild(input1)\r\n    remains.onclick = function () {\r\n      //change color for entire row\r\n      var row = this.parentNode\r\n      if (this.childNodes[0].checked) {\r\n        row.style.backgroundColor = '#e6ffe6'\r\n      } else {\r\n        row.style.backgroundColor = 'white'\r\n      }\r\n    }\r\n    //add column with checkbox \"Mandatory\"\r\n    var input2 = document.createElement('input')\r\n    input2.type = 'checkbox'\r\n    input2.name = xmlJoinByUnderscore + '_Mandatory'\r\n    input2.id = xmlJoinByUnderscore + '_Mandatory'\r\n    input2.className = 'mandatory checkbox is-small'\r\n    mandatory.appendChild(input2)\r\n    //xmlPath\r\n    //if too long word wrap, rember it one word\r\n    xmlPath.style.maxWidth = '300px'\r\n    //wrap\r\n    xmlPath.style.wordWrap = 'break-word'\r\n    xmlPath.innerHTML = root + '/' + xmlJoinBySlash\r\n    xmlPath.className = 'xmlPath'\r\n    //xmlPath.style.paddingLeft = parent.length * 10 + 'px'\r\n    //s1Tbl1\r\n    var input3 = document.createElement('input')\r\n    input3.type = 'text'\r\n    input3.name = xmlJoinByUnderscore + '_S1Table1'\r\n    input3.id = xmlJoinByUnderscore + '_S1Table1'\r\n    input3.className = 'input is-small'\r\n    input3.value = ''\r\n    input3.placeholder = 'S1 table'\r\n    s1Tbl1.appendChild(input3)\r\n    //s1Fld1\r\n    var input4 = document.createElement('input')\r\n    input4.type = 'text'\r\n    input4.name = xmlJoinByUnderscore + '_S1Field1'\r\n    input4.id = xmlJoinByUnderscore + '_S1Field1'\r\n    input4.className = 'input is-small'\r\n    input4.value = ''\r\n    input4.placeholder = 'S1 field'\r\n    s1Fld1.appendChild(input4)\r\n    //s1Tbl2\r\n    var input5 = document.createElement('input')\r\n    input5.type = 'text'\r\n    input5.name = xmlJoinByUnderscore + '_S1Table2'\r\n    input5.id = xmlJoinByUnderscore + '_S1Table2'\r\n    input5.className = 'input is-small'\r\n    input5.value = ''\r\n    input5.placeholder = 'S1 table'\r\n    s1Tbl2.appendChild(input5)\r\n    //s1Fld2\r\n    var input6 = document.createElement('input')\r\n    input6.type = 'text'\r\n    input6.name = xmlJoinByUnderscore + '_S1Field2'\r\n    input6.id = xmlJoinByUnderscore + '_S1Field2'\r\n    input6.className = 'input is-small'\r\n    input6.value = ''\r\n    input6.placeholder = 'S1 field'\r\n    s1Fld2.appendChild(input6)\r\n    //Value\r\n    value.innerHTML = obj[i]\r\n    //add sql textarea field\r\n    var input7 = document.createElement('textarea')\r\n    //1 row\r\n    input7.rows = 1\r\n    input7.id = xmlJoinByUnderscore + '_Sql'\r\n    input7.className = 'textarea is-small'\r\n    input7.rows = 1\r\n    input7.value = ''\r\n    input7.placeholder = 'SQL'\r\n    input7.spellcheck = false\r\n    input7.style.width = '300px'\r\n    sql.appendChild(input7)\r\n    //add column Observatii\r\n    var input8 = document.createElement('textarea')\r\n    input8.rows = 1\r\n    input8.id = xmlJoinByUnderscore + '_Observatii'\r\n    input8.className = 'textarea is-small'\r\n    input8.rows = 1\r\n    input8.value = ''\r\n    input8.placeholder = 'Observatii'\r\n    input8.spellcheck = false\r\n    input8.style.width = '300px'\r\n    cell10.appendChild(input8)\r\n    //add onclick event to row\r\n    row.onclick = function () {\r\n      var table = document.getElementById('xmlAsTable')\r\n      var rowCount = table.rows.length\r\n      for (var i = 1; i < rowCount; i++) {\r\n        table.rows[i].className = ''\r\n      }\r\n      this.className = 'is-selected'\r\n    }\r\n    row.style.backgroundColor = color\r\n    row.style.color = color1\r\n  })\r\n}\r\n\r\nfunction xml2json(node) {\r\n  var result = {}\r\n  if (node.hasAttributes()) {\r\n    result['__attributes'] = {}\r\n    var attrs = node.attributes\r\n    for (var i = 0; i < attrs.length; i++) {\r\n      result['__attributes'][attrs[i].nodeName] = attrs[i].nodeValue\r\n    }\r\n  }\r\n  if (node.hasChildNodes()) {\r\n    var children = node.childNodes\r\n    for (var i = 0; i < children.length; i++) {\r\n      var child = children[i]\r\n      if (child.nodeType == 1) {\r\n        if (child.childNodes.length == 1 && child.firstChild.nodeType == 3) {\r\n          // text value\r\n          //result[child.nodeName] = child.firstChild.nodeValue\r\n          var objAttrs = {}\r\n          if (child.hasAttributes()) {\r\n            var attrs = child.attributes\r\n            for (var j = 0; j < attrs.length; j++) {\r\n              objAttrs['__' + attrs[j].nodeName] = attrs[j].nodeValue\r\n            }\r\n            objAttrs[child.nodeName] = child.firstChild.nodeValue\r\n            //console.log('objAttrs', objAttrs)\r\n            //result[child.nodeName] = objAttrs\r\n            result[child.nodeName] = xml2json(child)\r\n            //add child.firstChild.nodeValue as a property to result[child.nodeName]\r\n            result[child.nodeName]['__value'] = child.firstChild.nodeValue\r\n          } else {\r\n            result[child.nodeName] = child.firstChild.nodeValue\r\n            //console.log(child.nodeName, result[child.nodeName])\r\n          }\r\n        } else {\r\n          // sub-object\r\n          if (typeof result[child.nodeName] == 'undefined') {\r\n            result[child.nodeName] = xml2json(child)\r\n          } else {\r\n            //array\r\n            if (typeof result[child.nodeName].push == 'undefined') {\r\n              var old = result[child.nodeName]\r\n              result[child.nodeName] = []\r\n              result[child.nodeName].push(old)\r\n              console.log('old', old)\r\n            }\r\n            result[child.nodeName].push(xml2json(child))\r\n            console.log('array', child.nodeName)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nfunction addRow() {\r\n  var table = document.getElementById('documente')\r\n  var row = table.insertRow()\r\n  var cell1 = row.insertCell()\r\n  var cell2 = row.insertCell()\r\n  var cell3 = row.insertCell()\r\n  var cell4 = row.insertCell()\r\n  cell1.innerHTML = `<input id = \"FPRMS${table.rows.length}\" class=\"input\" type=\"text\" placeholder=\"FPRMS\" />`\r\n  cell2.innerHTML = `<input id = \"SERIES${table.rows.length}\" class=\"input\" type=\"text\" placeholder=\"SERIES\" />`\r\n  cell3.innerHTML = `<input id = \"INITIALDIRIN${table.rows.length}\" class=\"input\" type=\"text\" placeholder=\"INITIALDIRIN\" />`\r\n  cell4.innerHTML = `<input id = \"INITIALDIROUT${table.rows.length}\" class=\"input\" type=\"text\" placeholder=\"INITIALDIROUT\" />`\r\n  var cell5 = row.insertCell()\r\n  cell5.className = 'CCCDOCUMENTES1MAPPINGS'\r\n  cell5.innerHTML = table.rows.length\r\n  //hide it\r\n  cell5.style.display = 'none'\r\n  //add actions column\r\n  var cell6 = row.insertCell()\r\n  cell6.innerHTML += `<button class=\"button is-small is-danger m-2\" onclick=\"deleteRow()\">Delete</button>`\r\n  cell6.innerHTML += `<button class=\"button is-small is-info m-2\" onclick=\"loadMapping()\">Load</button>`\r\n  //add class is-selected to current row\r\n  row.className = 'is-selected'\r\n  //add onclick event to row\r\n  row.onclick = function () {\r\n    var table = document.getElementById('documente')\r\n    var rowCount = table.rows.length\r\n    for (var i = 1; i < rowCount; i++) {\r\n      table.rows[i].className = ''\r\n    }\r\n    this.className = 'is-selected'\r\n  }\r\n}\r\n\r\nfunction deleteRow() {\r\n  var table = document.getElementById('documente')\r\n  var rowCount = table.rows.length\r\n  table.deleteRow(rowCount - 1)\r\n}\r\n\r\nfunction hideUnselectedRows() {\r\n  //if caption is \"Hide unselected rows\" change it to \"Show all rows\" and viceversa\r\n  var caption = document.getElementById('hideUnselectedRows').innerHTML\r\n  if (caption == 'Hide unselected rows') {\r\n    document.getElementById('hideUnselectedRows').innerHTML = 'Show all rows'\r\n  } else {\r\n    document.getElementById('hideUnselectedRows').innerHTML = 'Hide unselected rows'\r\n  }\r\n  var table = document.getElementById('xmlAsTable')\r\n  var tbody = table.tBodies[0]\r\n  var rowCount = tbody.rows.length\r\n  if (caption == 'Show all rows') {\r\n    for (var i = 1; i < rowCount; i++) {\r\n      var row = tbody.rows[i]\r\n      row.style.display = ''\r\n    }\r\n    return\r\n  } else {\r\n    for (var i = 1; i < rowCount; i++) {\r\n      var row = tbody.rows[i]\r\n      var input = row.cells[0].childNodes[0]\r\n      if (input.checked) {\r\n        row.style.display = ''\r\n      } else {\r\n        row.style.display = 'none'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction saveMapping() {\r\n  //SET CAPTION TO \"SHOW ALL ROWS\"\r\n  document.getElementById('hideUnselectedRows').innerHTML = 'Show all rows'\r\n  hideUnselectedRows()\r\n  if (!validateMappings()) {\r\n    return\r\n  }\r\n  //get current row from table documente and add class is-selected\r\n  var currentDoc = getDocument()\r\n  //verify if currentDoc already exists in database table CCCDOCUMENTES1MAPPINGS\r\n  client\r\n    .service('CCCDOCUMENTES1MAPPINGS')\r\n    .find({\r\n      query: {\r\n        FPRMS: currentDoc.FPRMS,\r\n        SERIES: currentDoc.SERIES\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(res)\r\n      if (res.data.length > 0) {\r\n        //ask user if he wants to overwrite the existing mapping\r\n        var answer = confirm('Mapping already exists. Do you want to overwrite it?')\r\n        if (answer) {\r\n          //check if it has children in table CCCXMLS1MAPPINGS\r\n          client\r\n            .service('CCCXMLS1MAPPINGS')\r\n            .find({\r\n              query: {\r\n                CCCDOCUMENTES1MAPPINGS: res.data[0].CCCDOCUMENTES1MAPPINGS\r\n              }\r\n            })\r\n            .then(async (res) => {\r\n              console.log('for delete', res)\r\n              try {\r\n                await deleteMapping(res.data[0].CCCDOCUMENTES1MAPPINGS)\r\n              } catch (err) {\r\n                console.log(err)\r\n              }\r\n              insertNewMapping(currentDoc)\r\n            })\r\n        } else {\r\n          return\r\n        }\r\n      } else {\r\n        insertNewMapping(currentDoc)\r\n      }\r\n    })\r\n}\r\n\r\nfunction insertNewMapping(currentDoc) {\r\n  //insert currentDoc in database table CCCDOCUMENTES1MAPPINGS\r\n  client\r\n    .service('CCCDOCUMENTES1MAPPINGS')\r\n    .create(currentDoc)\r\n    .then((res) => {\r\n      console.log(res)\r\n      var mappings = getSelectedMappingData()\r\n      var cccdocumentes1Mappings = res.CCCDOCUMENTES1MAPPINGS\r\n      mappings.forEach((item) => {\r\n        item['CCCDOCUMENTES1MAPPINGS'] = cccdocumentes1Mappings\r\n      })\r\n      console.log('mappings', mappings)\r\n      for (var i = 0; i < mappings.length; i++) {\r\n        client\r\n          .service('CCCXMLS1MAPPINGS')\r\n          .create(mappings[i])\r\n          .then((res) => {\r\n            //console.log('response', res)\r\n          })\r\n      }\r\n    })\r\n}\r\n\r\nfunction getDocument() {\r\n  var table = document.getElementById('documente')\r\n  var rowCount = table.rows.length\r\n  var row = table.rows[rowCount - 1]\r\n  row.className = 'is-selected'\r\n  //find cell in row with class CCCDOCUMENTES1MAPPINGS\r\n  var cell = row.getElementsByClassName('CCCDOCUMENTES1MAPPINGS')[0]\r\n  var CCCDOCUMENTES1MAPPINGS = cell.innerHTML\r\n  console.log('CCCDOCUMENTES1MAPPINGS', CCCDOCUMENTES1MAPPINGS)\r\n  //save row data in an object\r\n  var currentDoc = {}\r\n  currentDoc['SOSOURCE'] = 1351\r\n  currentDoc['FPRMS'] = parseInt(document.getElementById('FPRMS' + CCCDOCUMENTES1MAPPINGS.toString()).value)\r\n  currentDoc['SERIES'] = parseInt(document.getElementById('SERIES' + CCCDOCUMENTES1MAPPINGS.toString()).value)\r\n  currentDoc['INITIALDIRIN'] = document.getElementById(\r\n    'INITIALDIRIN' + CCCDOCUMENTES1MAPPINGS.toString()\r\n  ).value\r\n  currentDoc['INITIALDIROUT'] = document.getElementById(\r\n    'INITIALDIROUT' + CCCDOCUMENTES1MAPPINGS.toString()\r\n  ).value\r\n  currentDoc['TRDR_RETAILER'] = parseInt(document.getElementById('TRDR_RETAILER').value)\r\n  currentDoc['TRDR_CLIENT'] = 1\r\n  console.log(currentDoc)\r\n  return currentDoc\r\n}\r\n\r\nfunction getSelectedMappingData() {\r\n  if (!validateMappings()) {\r\n    return\r\n  }\r\n  var table = document.getElementById('xmlAsTable')\r\n  var rowCount = table.rows.length\r\n  var mapping = []\r\n  for (var i = 1; i < rowCount; i++) {\r\n    var row = table.rows[i]\r\n    var input = row.cells[1].childNodes[0]\r\n    if (input.checked) {\r\n      var obj = {}\r\n      /* obj['XMLNODE'] =\r\n        row.className.toLowerCase().indexOf('line') > -1\r\n          ? row.className + '/' + row.cells[2].innerHTML\r\n          : row.cells[2].innerHTML */\r\n      obj['XMLNODE'] = row.cells[3].innerHTML\r\n      //cells 3, 4, 5, 6 have an input type text field inside, get the value from input instead of innerHTML\r\n      obj['S1TABLE1'] = document.getElementById(row.cells[4].childNodes[0].id).value\r\n      obj['S1FIELD1'] = document.getElementById(row.cells[5].childNodes[0].id).value\r\n      if (document.getElementById(row.cells[6].childNodes[0].id).value)\r\n        obj['S1TABLE2'] = document.getElementById(row.cells[6].childNodes[0].id).value\r\n      if (document.getElementById(row.cells[7].childNodes[0].id).value)\r\n        obj['S1FIELD2'] = document.getElementById(row.cells[7].childNodes[0].id).value\r\n      obj['MANDATORY'] = row.cells[2].childNodes[0].checked ? 1 : 0\r\n      //sql\r\n      obj['SQL'] = document.getElementById(row.cells[8].childNodes[0].id).value\r\n      //Observatii\r\n      obj['OBSERVATII'] = document.getElementById(row.cells[10].childNodes[0].id).value\r\n      //add XMLORDER\r\n      obj['XMLORDER'] = parseFloat(row.cells[0].innerHTML)\r\n      mapping.push(obj)\r\n    }\r\n  }\r\n  return mapping\r\n}\r\n\r\nfunction validateMappings() {\r\n  /* var docTable = document.getElementById('documenteBody')\r\n  //get selected row from table documente\r\n  //find cell with input starting with initialdirin\r\n  var cell = docTable.rows[docTable.rows.length - 1].querySelector('input[id^=\"INITIALDIRIN\"]')\r\n  var hasInitialDirIn = cell.value ? true : false\r\n  console.log('hasInitialDirIn', hasInitialDirIn)\r\n  var table = document.getElementById('xmlAsTable')\r\n  //get tbody\r\n  var tbody = table.tBodies[0]\r\n  var rowCount = tbody.rows.length\r\n  var countSelectedRows = 0\r\n  for (var i = 1; i < rowCount; i++) {\r\n    var row = tbody.rows[i]\r\n    var input = row.cells[0].childNodes[0]\r\n    if (input.checked) {\r\n      countSelectedRows++\r\n      if (hasInitialDirIn && !document.getElementById(row.cells[3].childNodes[0].id).value) {\r\n        alert('Please fill in first S1 table field')\r\n        return false\r\n      }\r\n      if (hasInitialDirIn && !document.getElementById(row.cells[4].childNodes[0].id).value) {\r\n        alert('Please fill in first S1 field field')\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  if (countSelectedRows == 0) {\r\n    alert('Please select at least one row')\r\n    return false\r\n  } */\r\n  return true\r\n}\r\n\r\nfunction loadListaDocumente() {\r\n  //get all documents from database table CCCDOCUMENTES1MAPPINGS\r\n  var localStorageRetailer\r\n  try {\r\n    localStorageRetailer = parseInt(localStorage.getItem('trdr_retailer'))\r\n  } catch (err) {\r\n    console.log(err)\r\n    return\r\n  }\r\n  client\r\n    .service('CCCDOCUMENTES1MAPPINGS')\r\n    .find({\r\n      query: {\r\n        TRDR_RETAILER: localStorageRetailer\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(res)\r\n      var table = document.getElementById('documenteBody')\r\n      res.data.forEach((item) => {\r\n        var row = table.insertRow()\r\n        var cell1 = row.insertCell()\r\n        var cell2 = row.insertCell()\r\n        var cell3 = row.insertCell()\r\n        var cell4 = row.insertCell()\r\n        var cell5 = row.insertCell()\r\n        var cell6 = row.insertCell()\r\n        cell1.innerHTML = `<input id = \"FPRMS${item.CCCDOCUMENTES1MAPPINGS}\" class=\"input\" type=\"text\" placeholder=\"FPRMS\" value=\"${item.FPRMS}\" />`\r\n        cell2.innerHTML = `<input id = \"SERIES${item.CCCDOCUMENTES1MAPPINGS}\" class=\"input\" type=\"text\" placeholder=\"SERIES\" value=\"${item.SERIES}\" />`\r\n        cell3.innerHTML = `<input id = \"INITIALDIRIN${item.CCCDOCUMENTES1MAPPINGS}\" class=\"input\" type=\"text\" placeholder=\"INITIALDIRIN\" value=\"${item.INITIALDIRIN}\" />`\r\n        cell4.innerHTML = `<input id = \"INITIALDIROUT${item.CCCDOCUMENTES1MAPPINGS}\" class=\"input\" type=\"text\" placeholder=\"INITIALDIROUT\" value=\"${item.INITIALDIROUT}\" />`\r\n        cell5.innerHTML = `<button class=\"button is-danger is-small\" onclick=\"deleteMapping(${item.CCCDOCUMENTES1MAPPINGS})\">Delete</button>`\r\n        //button for loading xml mappings for current document\r\n        cell5.innerHTML += `<button class=\"button is-info is-small ml-2\" onclick=\"loadMapping(${item.CCCDOCUMENTES1MAPPINGS})\">Load</button>`\r\n        //add button for loading from another document from table documente\r\n        cell5.innerHTML += `<button class=\"button is-info is-small ml-2\" onclick=\"copyFromAnotherDocument(${item.CCCDOCUMENTES1MAPPINGS})\">Clone</button>`\r\n        //cell6 hidden CCCDOCUMENTES1MAPPINGS, no input\r\n        cell6.innerHTML = item.CCCDOCUMENTES1MAPPINGS\r\n        //hide cell6\r\n        cell6.style.display = 'none'\r\n        //name cell6\r\n        cell6.className = 'CCCDOCUMENTES1MAPPINGS'\r\n      })\r\n    })\r\n}\r\n\r\nasync function deleteMapping(id) {\r\n  //ask user if he wants to delete the mapping\r\n  var answer = confirm('Are you sure you want to delete this mapping?')\r\n  if (!answer) {\r\n    return\r\n  }\r\n  //delete from table CCCXMLS1MAPPINGS then CCCDOCUMENTES1MAPPINGS; wait for each transaction to complete\r\n  await client\r\n    .service('CCCXMLS1MAPPINGS')\r\n    .remove(null, { query: { CCCDOCUMENTES1MAPPINGS: id } })\r\n    .then((res) => {\r\n      console.log(res)\r\n    })\r\n\r\n  await client\r\n    .service('CCCDOCUMENTES1MAPPINGS')\r\n    .remove(id)\r\n    .then((res) => {\r\n      console.log(res)\r\n    })\r\n}\r\n\r\nfunction loadMapping(id) {\r\n  //add mappings from db into xmlAsTable table id\r\n  //get all mappings from table CCCXMLS1MAPPINGS\r\n  client\r\n    .service('CCCXMLS1MAPPINGS')\r\n    .find({\r\n      query: {\r\n        CCCDOCUMENTES1MAPPINGS: id,\r\n        $sort: {\r\n          XMLORDER: 1\r\n        }\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(res)\r\n      //get all rows from xmlAsTable\r\n      var table = document.getElementById('xmlAsTable')\r\n      //if xmlAsTable has rows, delete the ones with the same item.XMLNODE in the third column\r\n      res.data.forEach((item) => {\r\n        var rowCount = table.rows.length\r\n        for (var i = 1; i < rowCount; i++) {\r\n          var row = table.rows[i]\r\n          if (row.cells.length && row.cells.length > 5 && row.cells[2].innerHTML == item.XMLNODE) {\r\n            table.deleteRow(i)\r\n            break\r\n          }\r\n        }\r\n      })\r\n      //add rows from db and create xml dom\r\n      //Order is the main node\r\n      //id res length is 0, return\r\n      if (res.data.length == 0) {\r\n        //no data message\r\n        var row = table.insertRow()\r\n        var cell = row.insertCell()\r\n        cell.innerHTML = 'No data'\r\n        cell.colSpan = 9\r\n        cell.style.textAlign = 'center'\r\n        return\r\n      } else {\r\n        //thead if doesn't exist\r\n        if (!table.tHead) {\r\n          addTableHeader(table)\r\n        }\r\n      }\r\n      //create tbody\r\n      addTableBody(table, res.data)\r\n      //add xml dom to xmlTextArea\r\n      addXmlDomToTextArea(res.data)\r\n    })\r\n}\r\n\r\nfunction addTableBody(table, data) {\r\n  //if body doesn't exist create it otherwise get it\r\n  var tbody = table.tBodies[0] ? table.tBodies[0] : table.createTBody()\r\n  data.forEach((item) => {\r\n    //add rows\r\n    var row = tbody.insertRow()\r\n    //add cells\r\n    //xml order\r\n    var xmlOrder = row.insertCell()\r\n    xmlOrder.innerHTML = item.XMLORDER\r\n    xmlOrder.className = 'xmlOrder'\r\n    var pick = row.insertCell()\r\n    var req = row.insertCell()\r\n    var xmlPath = row.insertCell()\r\n    var s1Tbl1 = row.insertCell()\r\n    var s1Fld1 = row.insertCell()\r\n    var s1Tbl2 = row.insertCell()\r\n    var s1Fld2 = row.insertCell()\r\n    var sql = row.insertCell()\r\n    var value = row.insertCell()\r\n    var observatii = row.insertCell()\r\n    //add checkbox for pick\r\n    var input1 = document.createElement('input')\r\n    input1.type = 'checkbox'\r\n    input1.name = item.XMLNODE + '_Remaining'\r\n    input1.className = 'remaining checkbox is-small' //important, used in hideUnselectedRows()\r\n    input1.id = item.XMLNODE + '_Remaining'\r\n    input1.checked = true\r\n    pick.appendChild(input1)\r\n    pick.onclick = function () {\r\n      //change color for entire row\r\n      var row = this.parentNode\r\n      if (this.childNodes[0].checked) {\r\n        row.style.backgroundColor = '#e6ffe6'\r\n      } else {\r\n        row.style.backgroundColor = 'white'\r\n      }\r\n    }\r\n    //add checkbox for req\r\n    var input2 = document.createElement('input')\r\n    input2.type = 'checkbox'\r\n    input2.name = item.XMLNODE + '_Mandatory'\r\n    input2.id = item.XMLNODE + '_Mandatory'\r\n    input2.className = 'mandatory checkbox is-small'\r\n    input2.checked = item.MANDATORY == 1 ? true : false\r\n    req.appendChild(input2)\r\n    //xmlPath\r\n    //if too long word wrap, rember it one word\r\n    xmlPath.style.maxWidth = '300px'\r\n    //wrap\r\n    xmlPath.style.wordWrap = 'break-word'\r\n    xmlPath.innerHTML = item.XMLNODE\r\n    xmlPath.className = 'xmlPath'\r\n    //s1Tbl1\r\n    var input3 = document.createElement('input')\r\n    input3.type = 'text'\r\n    input3.name = item.XMLNODE + '_S1Table1'\r\n    input3.id = item.XMLNODE + '_S1Table1'\r\n    input3.className = 'input is-small'\r\n    input3.value = item.S1TABLE1\r\n    input3.placeholder = 'S1 table'\r\n    s1Tbl1.appendChild(input3)\r\n    //s1Fld1\r\n    var input4 = document.createElement('input')\r\n    input4.type = 'text'\r\n    input4.name = item.XMLNODE + '_S1Field1'\r\n    input4.id = item.XMLNODE + '_S1Field1'\r\n    input4.className = 'input is-small'\r\n    input4.value = item.S1FIELD1\r\n    input4.placeholder = 'S1 field'\r\n    s1Fld1.appendChild(input4)\r\n    //s1Tbl2\r\n    var input5 = document.createElement('input')\r\n    input5.type = 'text'\r\n    input5.name = item.XMLNODE + '_S1Table2'\r\n    input5.id = item.XMLNODE + '_S1Table2'\r\n    input5.className = 'input is-small'\r\n    input5.value = item.S1TABLE2\r\n    input5.placeholder = 'S1 table'\r\n    s1Tbl2.appendChild(input5)\r\n    //s1Fld2\r\n    var input6 = document.createElement('input')\r\n    input6.type = 'text'\r\n    input6.name = item.XMLNODE + '_S1Field2'\r\n    input6.id = item.XMLNODE + '_S1Field2'\r\n    input6.className = 'input is-small'\r\n    input6.value = item.S1FIELD2\r\n    input6.placeholder = 'S1 field'\r\n    s1Fld2.appendChild(input6)\r\n    //Value\r\n    value.innerHTML = ''\r\n    //add sql textarea field\r\n    var input7 = document.createElement('textarea')\r\n    //1 row\r\n    input7.rows = 1\r\n    input7.id = item.XMLNODE + '_Sql'\r\n    input7.className = 'textarea is-small'\r\n    input7.value = item.SQL\r\n    input7.placeholder = 'SQL'\r\n    input7.spellcheck = false\r\n    input7.style.width = '300px'\r\n    sql.appendChild(input7)\r\n\r\n    //add observatii textarea field\r\n    var input8 = document.createElement('textarea')\r\n    //1 row\r\n    input8.rows = 1\r\n    input8.id = item.XMLNODE + '_Observatii'\r\n    input8.className = 'textarea is-small'\r\n    input8.value = item.OBSERVATII\r\n    input8.placeholder = 'Observatii'\r\n    input8.spellcheck = false\r\n    input8.style.width = '300px'\r\n    observatii.appendChild(input8)\r\n    //color row so it can be easily identified\r\n    row.style.backgroundColor = 'whitesmoke'\r\n  })\r\n}\r\n\r\nfunction addXmlDomToTextArea(data) {\r\n  //create xml dom\r\n  var xmlDom = document.implementation.createDocument('', '', null)\r\n  var root = xmlDom.createElement(document.getElementById('xmlRoot').value)\r\n  xmlDom.appendChild(root)\r\n  data.forEach((item) => {\r\n    var xmlNodes = item.XMLNODE.split('/')\r\n    //add xml elements to xml dom\r\n    var root = xmlDom.documentElement //Order or...\r\n    for (var i = 0; i < xmlNodes.length; i++) {\r\n      var node\r\n      //verify if node already exists\r\n      if (root.getElementsByTagName(xmlNodes[i]).length > 0) {\r\n        node = root.getElementsByTagName(xmlNodes[i])[0]\r\n        root.appendChild(node)\r\n        root = node\r\n      } else {\r\n        try {\r\n          node = xmlDom.createElement(xmlNodes[i])\r\n          root.appendChild(node)\r\n          root = node\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  //add xml dom to xmlTextArea\r\n  var xmlTextArea = document.getElementById('xmlTextArea')\r\n  xmlTextArea.value = xmlDom.documentElement.outerHTML\r\n}\r\n\r\nloadListaDocumente()\r\n\r\nfunction searchTable(tableId, searchBoxId) {\r\n  // Declare variables\r\n  var input, filter, table, tr, td, i, txtValue\r\n  input = document.getElementById(searchBoxId)\r\n  filter = input.value.toUpperCase()\r\n  table = document.getElementById(tableId)\r\n  //search third column\r\n  tr = table.getElementsByTagName('tr')\r\n  // Loop through all table rows, and hide those who don't match the search query\r\n  for (i = 0; i < tr.length; i++) {\r\n    td = tr[i].getElementsByTagName('td')[2]\r\n    if (td) {\r\n      txtValue = td.textContent || td.innerText\r\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        tr[i].style.display = ''\r\n      } else {\r\n        tr[i].style.display = 'none'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nasync function sendOrder(xml, xmlFilename, xmlDate, retailer) {\r\n  return await createOrderJSONRefactored(xml, 1351, 701, 7012, xmlFilename, xmlDate, retailer)\r\n}\r\n\r\nasync function createOrderJSONRefactored(xml, sosource, fprms, series, xmlFilename, xmlDate, retailer) {\r\n  //use await instead of promises\r\n  //get a token for s1 connection\r\n  var res = await client.service('CCCRETAILERSCLIENTS').find({\r\n    query: {\r\n      TRDR_CLIENT: 1\r\n    }\r\n  })\r\n  console.log('date logare', res)\r\n  var url = res.data[0].WSURL\r\n  var username = res.data[0].WSUSER\r\n  var password = res.data[0].WSPASS\r\n  var res = await client.service('connectToS1').find({\r\n    query: {\r\n      url: url,\r\n      username: username,\r\n      password: password\r\n    }\r\n  })\r\n  console.log('connectToS1', res)\r\n  var token = res.token\r\n  //get CCCDOCUMENTES1MAPPINGS for sourcCCCDOCUMENTES1MAPPINGSe, fprms, series\r\n  var res = await client.service('CCCDOCUMENTES1MAPPINGS').find({\r\n    query: {\r\n      SOSOURCE: sosource,\r\n      FPRMS: fprms,\r\n      SERIES: series,\r\n      TRDR_RETAILER: retailer\r\n    }\r\n  })\r\n  console.log('CCCDOCUMENTES1MAPPINGS', res)\r\n\r\n  var CCCDOCUMENTES1MAPPINGS = res.data[0].CCCDOCUMENTES1MAPPINGS\r\n  //get CCCXMLS1MAPPINGS for CCCDOCUMENTES1MAPPINGS\r\n  var res = await client.service('CCCXMLS1MAPPINGS').find({\r\n    query: {\r\n      CCCDOCUMENTES1MAPPINGS: CCCDOCUMENTES1MAPPINGS\r\n    }\r\n  })\r\n  console.log('CCCXMLS1MAPPINGS', res)\r\n  var CCCXMLS1MAPPINGS = res.data\r\n  //create json order\r\n  var jsonOrder = {}\r\n  jsonOrder['service'] = 'setData'\r\n  jsonOrder['clientID'] = token\r\n  jsonOrder['appId'] = 1001\r\n  jsonOrder['OBJECT'] = 'SALDOC'\r\n  jsonOrder['FORM'] = 'EFIntegrareRetailers'\r\n\r\n  //find distinct S1TABLE1, for grouping data\r\n  var distinctS1TABLE1 = []\r\n  CCCXMLS1MAPPINGS.forEach((item) => {\r\n    if (distinctS1TABLE1.indexOf(item.S1TABLE1) == -1) {\r\n      distinctS1TABLE1.push(item.S1TABLE1)\r\n    }\r\n  })\r\n  console.log('distinctS1TABLE1', distinctS1TABLE1)\r\n  //create jsonOrder['DATA']\r\n  var DATA = {}\r\n  //create jsonOrder['DATA'][distinct]\r\n  distinctS1TABLE1.forEach((item) => {\r\n    DATA[item] = []\r\n  })\r\n  //add data to jsonOrder['DATA'][distinct]\r\n  CCCXMLS1MAPPINGS.forEach((item) => {\r\n    var xmlVals = getValFromXML(xml, item.XMLNODE)\r\n    xmlVals.forEach((xmlVal) => {\r\n      var val = 0\r\n      if (item.SQL) {\r\n        //SQL: select trdbranch from trdbranch where trdr=12334 and cccs1dxgln='{value}'\r\n        //{value} is the value from xml for current node\r\n        //execute sql\r\n        /*\r\n              executeSQL(sql).then((res) => {\r\n                console.log('res', res)\r\n                val = res.data[0][item.S1FIELD1]\r\n              })\r\n              */\r\n        val = { SQL: item.SQL, value: xmlVal }\r\n      } else {\r\n        val = xmlVal\r\n      }\r\n      var obj = {}\r\n      obj[item.S1FIELD1] = val\r\n      DATA[item.S1TABLE1].push(obj)\r\n    })\r\n  })\r\n  jsonOrder['DATA'] = DATA\r\n\r\n  console.log('jsonOrder', jsonOrder)\r\n\r\n  //for each value containing an object, replace it with the returned getDataset value from the object\r\n  //for ex: {SQL: \"select trdbranch from trdbranch where trdr=12334 and cccs1dxgln='{value}'\"}\r\n  //replace it with the client.service('getDataset').find({SQL: \"select trdbranch from trdbranch where trdr=12334 and cccs1dxgln='{value}'\"})\r\n  //parse jsonOrder['DATA'] to get all objects\r\n  var objects = []\r\n  for (var key in jsonOrder['DATA']) {\r\n    jsonOrder['DATA'][key].forEach((item) => {\r\n      objects.push(item)\r\n    })\r\n  }\r\n  console.log('objects', objects)\r\n  var errors = [],\r\n    errors2 = []\r\n  //if object has an object with a key SQL, replace it with the returned getDataset value from the object\r\n  for (var i = 0; i < objects.length; i++) {\r\n    var item = objects[i]\r\n    for (var key in item) {\r\n      if (typeof item[key] == 'object') {\r\n        if (item[key].SQL) {\r\n          console.log('SQL', item[key].SQL)\r\n          console.log('xml Value', item[key].value)\r\n          //replace item[key] with the returned getDataset value from the object\r\n\r\n          //set params' query\r\n          var params = {}\r\n          params['query'] = {}\r\n          params['query']['sqlQuery'] = item[key].SQL\r\n          //replace {value} with xml value\r\n          params['query']['sqlQuery'] = params['query']['sqlQuery'].replace('{value}', item[key].value)\r\n          var res = await client.service('getDataset').find(params)\r\n          console.log('getDataset', JSON.stringify(res))\r\n          if (res.data) {\r\n            item[key] = res.data\r\n          } else {\r\n            //1. xml > dom\r\n            var parser = new DOMParser()\r\n            var xmlDoc = parser.parseFromString(xml, 'text/xml')\r\n            /*2.1. example\r\n            <Item><Description>Litter without roof Stefanplast Sprint Corner Plus, Blue, 40x56x h 14</Description><BuyersItemIdentification>8003507968158</BuyersItemIdentification><SellersItemIdentification>MF.06759</SellersItemIdentification><StandardItemIdentification>8003507968158</StandardItemIdentification><AdditionalItemIdentification>DeliveryDate:2023-10-03</AdditionalItemIdentification><AdditionalItemIdentification>LineStatus:valid</AdditionalItemIdentification><AdditionalItemIdentification>ClientConfirmationStatus:confirmed</AdditionalItemIdentification></Item>\r\n            */\r\n            //2.2. xpath: find node with item[key].value and coresponing sibling \"Description\"\r\n            var xpath = `//*[contains(text(), '${item[key].value}')]`\r\n            console.log('xpath', xpath, 'key', key, 'value', item[key].value, 'sql', item[key].SQL)\r\n            var nodes = xmlDoc.evaluate(xpath, xmlDoc, null, XPathResult.ANY_TYPE, null)\r\n            console.log('nodes', nodes)\r\n            errors2.push({ key: key, value: item[key].value, sql: item[key].SQL, xpath: xpath, nodes: nodes })\r\n            try {\r\n              var node = nodes.iterateNext()\r\n              //2.3. get sibling \"Description\"\r\n              var description = node.parentNode.getElementsByTagName('Description')[0].innerHTML\r\n              //2.4. get sibling \"BuyersItemIdentification\"\r\n              var BuyersItemIdentification =\r\n                node.parentNode.getElementsByTagName('BuyersItemIdentification')[0].innerHTML\r\n              //make error message fiendly\r\n              errors.push(\r\n                `Error in converting code ${item[key].value} to S1 value.\\nDescription: ${description},\\nBuyersItemIdentification: ${BuyersItemIdentification}`\r\n              )\r\n            } catch (err) {\r\n              console.log(err)\r\n              errors.push(`Error in converting code ${item[key].value} to S1 value.`)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (errors.length > 0) {\r\n    alert(errors.join('\\n\\n'))\r\n  }\r\n\r\n  if (errors2.length > 0) {\r\n    console.log('errors2', errors2)\r\n    return { success: false, errors: errors2 }\r\n  }\r\n\r\n  //match mtrl with price and qty1 in an object in itelines array\r\n  var itelines = jsonOrder['DATA']['ITELINES']\r\n  //select distinct fieldnames from itelines\r\n  var fieldNames = []\r\n  itelines.forEach((item) => {\r\n    for (var key in item) {\r\n      if (fieldNames.indexOf(key) == -1) {\r\n        fieldNames.push(key)\r\n      }\r\n    }\r\n  })\r\n  //create n distinct arrays for each fieldname\r\n  var arrays = {}\r\n  fieldNames.forEach((item) => {\r\n    arrays[item] = []\r\n  })\r\n  //add values to arrays\r\n  itelines.forEach((item) => {\r\n    for (var key in item) {\r\n      arrays[key].push(item[key])\r\n    }\r\n  })\r\n\r\n  //create itelines array\r\n  var itelines = []\r\n  //create objects with fieldnames and values\r\n  for (var i = 0; i < arrays[fieldNames[0]].length; i++) {\r\n    var obj = {}\r\n    for (var j = 0; j < fieldNames.length; j++) {\r\n      obj[fieldNames[j]] = arrays[fieldNames[j]][i]\r\n    }\r\n    itelines.push(obj)\r\n  }\r\n\r\n  //add itelines to jsonOrder['DATA']\r\n  jsonOrder['DATA']['ITELINES'] = itelines\r\n\r\n  distinctS1TABLE1.forEach((item) => {\r\n    //except itelines\r\n    if (item != 'ITELINES') {\r\n      var obj = {}\r\n      jsonOrder['DATA'][item].forEach((item2) => {\r\n        for (var key in item2) {\r\n          obj[key] = item2[key]\r\n        }\r\n      })\r\n      jsonOrder['DATA'][item] = [obj]\r\n    }\r\n  })\r\n\r\n  //add series and trdr to SALDOC\r\n  jsonOrder['DATA']['SALDOC'][0]['SERIES'] = series\r\n  //TRDR_RETAILER\r\n  localStorageRetailer = parseInt(localStorage.getItem('trdr_retailer'))\r\n  jsonOrder['DATA']['SALDOC'][0]['TRDR'] = localStorageRetailer\r\n\r\n  console.log('jsonOrder', jsonOrder)\r\n\r\n  //send order to server\r\n  await sendOrderToServer(jsonOrder, xmlFilename, xmlDate, retailer)\r\n\r\n  return { success: true }\r\n}\r\n\r\nasync function sendOrderToServer(jsonOrder, xmlFilename, xmlDate, retailer) {\r\n  //1. url, username and password returnd from call to service CCCRETAILERSCLIENTS\r\n  //2. server new service: app.use('connectToS1', new connectToS1ServiceClass()) return connection token to use in axios call\r\n  //3. call setDocument service with jsonOrder and token\r\n\r\n  //1. url, username and password returnd from call to service CCCRETAILERSCLIENTS\r\n  await client\r\n    .service('CCCRETAILERSCLIENTS')\r\n    .find({\r\n      query: {\r\n        TRDR_CLIENT: 1\r\n      }\r\n    })\r\n    .then(async (res) => {\r\n      console.log('date logare', res)\r\n      //2. server new service: app.use('connectToS1', new connectToS1ServiceClass()) return connection token to use in axios call\r\n      var url = res.data[0].WSURL\r\n      var username = res.data[0].WSUSER\r\n      var password = res.data[0].WSPASS\r\n      await client\r\n        .service('connectToS1')\r\n        .find({\r\n          query: {\r\n            url: url,\r\n            username: username,\r\n            password: password\r\n          }\r\n        })\r\n        .then(async (res) => {\r\n          console.log(res)\r\n          console.log('s1 token', res.token)\r\n          //replace jsonOrder clientID with token\r\n          jsonOrder['clientID'] = res.token\r\n          console.log('jsonOrder', jsonOrder)\r\n          console.log('url', url)\r\n          await client\r\n            .service('setDocument')\r\n            .create(jsonOrder)\r\n            .then((res) => {\r\n              console.log(res)\r\n              if (res.success == true) {\r\n                alert('Order sent to S1, order internal number: ' + res.id)\r\n                //update CCCSFTPXML with order internal number as findoc\r\n                client\r\n                  .service('CCCSFTPXML')\r\n                  .patch(\r\n                    null,\r\n                    { FINDOC: parseInt(res.id) },\r\n                    { query: { XMLFILENAME: xmlFilename, XMLDATE: xmlDate, TRDR_RETAILER: retailer } }\r\n                  )\r\n                  .then((res) => {\r\n                    console.log('CCCSFTPXML patch', res)\r\n                    //refresh xml table\r\n                    displayXmlDataForRetailer(retailer)\r\n                  })\r\n              } else {\r\n                alert('Error: ' + res.error)\r\n              }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction getValFromXML(xml, node) {\r\n  //Xpath\r\n  var dom = new DOMParser().parseFromString(xml, 'text/xml')\r\n  var doc = dom.documentElement\r\n  //console.log('getValFromXML', doc)\r\n  //node value by xpath\r\n  var iterator = dom.evaluate(node, doc, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null)\r\n  console.log('getValFromXML', iterator)\r\n  var matchingNodes = []\r\n  try {\r\n    let thisNode = iterator.iterateNext()\r\n\r\n    while (thisNode) {\r\n      // console.log(thisNode.textContent)\r\n      matchingNodes.push(thisNode.textContent)\r\n      thisNode = iterator.iterateNext()\r\n    }\r\n  } catch (e) {\r\n    console.error(`Error: Document tree modified during iteration ${e}`)\r\n  }\r\n\r\n  return matchingNodes\r\n}\r\n\r\nasync function fetchXMLFromRemoteServer() {\r\n  //1. localStorage.getItem('trdr_retailer')\r\n  //2. client.service('sftp').downloadXml({}, { query: { retailer: localStorage.getItem('trdr_retailer') } })\r\n  //3. client.service('sftp').storeXmlInDB({}, { query: { retailer: localStorage.getItem('trdr_retailer') } })\r\n  //4. displayXmlDataForRetailer(localStorage.getItem('trdr_retailer'))\"\r\n  //5. change document.getElementById('preluareComenziBtn') text according to stage of process\r\n  var retailer\r\n  try {\r\n    retailer = parseInt(localStorage.getItem('trdr_retailer'))\r\n  } catch (err) {\r\n    alert('Please select a retailer')\r\n    console.log('Please select a retailer')\r\n    return\r\n  }\r\n  //change button text\r\n  document.getElementById('preluareComenziBtn').innerHTML = 'Please wait...'\r\n  //1. localStorage.getItem('trdr_retailer')\r\n  //2. client.service('sftp').downloadXml({}, { query: { retailer: localStorage.getItem('trdr_retailer') } })\r\n  await client\r\n    .service('sftp')\r\n    .downloadXml({}, { query: { retailer: retailer } })\r\n    .then((res) => {\r\n      console.log('downloadXml', res)\r\n    })\r\n\r\n  //3. client.service('sftp').storeXmlInDB({}, { query: { retailer: localStorage.getItem('trdr_retailer') } })\r\n  await client\r\n    .service('sftp')\r\n    .storeXmlInDB({}, { query: { retailer: retailer } })\r\n    .then((res) => {\r\n      console.log('storeXmlInDB', res)\r\n    })\r\n\r\n  //4. displayXmlDataForRetailer(localStorage.getItem('trdr_retailer'))\"\r\n  await displayXmlDataForRetailer(retailer)\r\n  //5. change document.getElementById('preluareComenziBtn') text according to stage of process\r\n  document.getElementById('preluareComenziBtn').innerHTML = 'Preluare comenzi'\r\n}\r\n\r\nasync function displayXmlDataForRetailer(retailer) {\r\n  //localStorage.getItem('trdr_retailer')\r\n  await getRetailerXMLData(retailer).then((data) => {\r\n    console.log('getRetailerXMLData', data)\r\n    //get the table body\r\n    const xmlTableBody = document.getElementById('xmlTableBody')\r\n    //empty the table body\r\n    xmlTableBody.innerHTML = ''\r\n    //loop through the data\r\n    data.data.forEach(async (xml) => {\r\n      //create a new row\r\n      var row = xmlTableBody.insertRow()\r\n      //insert the cells\r\n      var humanDate = new Date(xml.XMLDATE).toLocaleString()\r\n      row.insertCell().innerHTML = humanDate\r\n      //row.insertCell().innerHTML = xml.XMLFILENAME ? xml.XMLFILENAME : ''\r\n      var filenameCell = row.insertCell()\r\n      filenameCell.innerHTML = xml.XMLFILENAME ? xml.XMLFILENAME : ''\r\n      row.insertCell().innerHTML =\r\n        '<textarea class=\"textarea is-small is-info\" rows=\"10\" cols=\"50\">' + xml.XMLDATA + '</textarea>'\r\n      //spellcheck=\"false\"\r\n      row.cells[2].spellcheck = false\r\n      //row.insertCell().innerHTML = xml.JSONDATA\r\n      var parser = new DOMParser()\r\n      var xmlDoc = parser.parseFromString(xml.XMLDATA, 'text/xml')\r\n      //parse xml to dom and find <AccountingCustomerParty> something <PartyName> node\r\n      var partyName = xmlDoc.getElementsByTagName('AccountingCustomerParty')[0]\r\n        ? xmlDoc.getElementsByTagName('AccountingCustomerParty')[0].getElementsByTagName('PartyName')[0]\r\n        : null\r\n      //get /Order/ID value\r\n      var orderId = getValFromXML(xml.XMLDATA, '/Order/ID')[0]\r\n      //if exists append to cell xmlfilename\r\n      if (orderId) {\r\n        filenameCell.innerHTML += '<br><span class=\"tag is-info is-light\">' + orderId + '</span>'\r\n      }\r\n      row.insertCell().innerHTML = partyName ? partyName.innerHTML : ''\r\n      //create the actions cell\r\n      var actionsCell = row.insertCell()\r\n      //create the buttons\r\n      var saveButton = document.createElement('button')\r\n      saveButton.innerHTML = 'Save'\r\n      saveButton.className = 'button is-small is-info ml-2'\r\n      saveButton.onclick = function () {\r\n        //save the xml to file\r\n        var xmlBlob = new Blob([xml.XMLDATA], { type: 'text/xml' })\r\n        var xmlURL = window.URL.createObjectURL(xmlBlob)\r\n        var tempLink = document.createElement('a')\r\n        tempLink.href = xmlURL\r\n        tempLink.setAttribute('download', xml.XMLFILENAME)\r\n        tempLink.click()\r\n      }\r\n      var copyButton = document.createElement('button')\r\n      copyButton.innerHTML = 'Copy'\r\n      copyButton.className = 'button is-small is-primary ml-2'\r\n      copyButton.onclick = function () {\r\n        //copy the xml to clipboard\r\n        navigator.clipboard.writeText(xml.XMLDATA).then(\r\n          function () {\r\n            alert('copied')\r\n          },\r\n          function (err) {\r\n            console.error('Async: Could not copy text: ', err)\r\n          }\r\n        )\r\n      }\r\n      var deleteButton = document.createElement('button')\r\n      deleteButton.innerHTML = 'Delete'\r\n      deleteButton.className = 'button is-small is-danger ml-2'\r\n      deleteButton.onclick = function () {\r\n        alert('delete')\r\n      }\r\n      //send order\r\n      var sendOrderButton = document.createElement('button')\r\n      sendOrderButton.innerHTML = xml.FINDOC ? 'Order sent' : 'Send order'\r\n      sendOrderButton.className = 'button is-small is-success ml-2'\r\n      sendOrderButton.onclick = async function () {\r\n        //daca am findoc nu mai trimit\r\n        if (!xml.FINDOC) {\r\n          sendOrderButton.innerHTML = 'Sending...'\r\n          var response = await sendOrder(xml.XMLDATA, xml.XMLFILENAME, xml.XMLDATE, retailer)\r\n          if (response.success == false) {\r\n            //show no of errors\r\n            var errorMsg = ''\r\n            errorMsg += 'Errors: ' + response.errors.length + '\\n\\n'\r\n            for (var i = 0; i < response.errors.length; i++) {\r\n              var error = response.errors[i]\r\n              //{ key: key, value: item[key].value, sql: item[key].SQL, xpath: xpath, nodes: nodes }\r\n              //if error.sql contains \"from trdbranch\" then the title of error is Sucursala\r\n              if (error.sql.indexOf('from trdbranch') > -1) {\r\n                error.title = 'Sucursala'\r\n              }\r\n              //display title\r\n              errorMsg += i + 1 + '.' + error.title + '\\n'\r\n              //count title characters and add dashes under it\r\n              for (var j = 0; j < error.title.length; j++) {\r\n                errorMsg += '-'\r\n              }\r\n              errorMsg += '\\n'\r\n              errorMsg += `Error in converting ${error.key} code ${error.value} to S1 value.\\nSQL: ${\r\n                error.sql\r\n              },\\nNodes: ${error.nodes.iterateNext().parentNode.innerHTML}\\n\\n`\r\n              sendOrderButton.innerHTML = 'See errors'\r\n              //add text area with errors beneath the buttons\r\n              var textarea = document.createElement('textarea')\r\n              textarea.rows = 10\r\n              textarea.cols = 50\r\n              textarea.innerHTML = errorMsg\r\n              actionsCell.appendChild(textarea)\r\n              //no spellcheck\r\n              textarea.spellcheck = false\r\n              //class\r\n              textarea.className = 'textarea is-small is-danger'\r\n            }\r\n            return\r\n          } else {\r\n            sendOrderButton.innerHTML = 'Order sent'\r\n          }\r\n        } else {\r\n          alert('Already sent')\r\n        }\r\n      }\r\n      //append the buttons to the actions cell\r\n      actionsCell.appendChild(saveButton)\r\n      actionsCell.appendChild(copyButton)\r\n      actionsCell.appendChild(deleteButton)\r\n      actionsCell.appendChild(sendOrderButton)\r\n\r\n      //add cell for findoc\r\n      var findoc = row.insertCell()\r\n      //add class for findoc\r\n      findoc.className = 'findoc'\r\n      //if findoc is not null, add a green tick, else add a red cross; big icons\r\n      if (xml.FINDOC) {\r\n        findoc.innerHTML = '<i class=\"fas fa-xl fa-check-circle has-text-success\"></i><br><br>' + xml.FINDOC\r\n      } else {\r\n        //verify if order was sent but not confirmed\r\n        //get Order > ID value from XMLDATA and search in SALDOC table by processSqlAsDataset\r\n        var orderId = getValFromXML(xml.XMLDATA, '/Order/ID')[0]\r\n        console.log('orderId', orderId)\r\n        //get order from SALDOC\r\n        var params = {}\r\n        params['query'] = {}\r\n        params['query'][\r\n          'sqlQuery'\r\n        ] = `select findoc from findoc where sosource=1351 and trdr=${retailer} and num04='${orderId}'`\r\n        var res = await client.service('getDataset').find(params)\r\n        console.log('getDataset', JSON.stringify(res))\r\n        if (res.data) {\r\n          findoc.innerHTML = '<i class=\"fas fa-xl fa-check-circle has-text-success\"></i><br><br>' + res.data\r\n          //update CCCSFTPXML with order internal number as findoc\r\n          client\r\n            .service('CCCSFTPXML')\r\n            .patch(\r\n              null,\r\n              { FINDOC: parseInt(res.data) },\r\n              { query: { XMLFILENAME: xml.XMLFILENAME, XMLDATE: xml.XMLDATE, TRDR_RETAILER: retailer } }\r\n            )\r\n            .then((res) => {\r\n              console.log('CCCSFTPXML patch', res)\r\n            })\r\n          //button text\r\n          sendOrderButton.innerHTML = 'Order sent'\r\n        } else {\r\n          findoc.innerHTML = '<i class=\"fas fa-xl fa-times-circle has-text-danger\"></i>'\r\n          //add a checkbox to actions cell\r\n          var input = document.createElement('input')\r\n          input.type = 'checkbox'\r\n          input.name = xml.XMLFILENAME\r\n          input.id = xml.XMLFILENAME\r\n          input.className = 'checkbox is-small ml-2'\r\n          actionsCell.appendChild(input)\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction copyFromAnotherDocument(id) {\r\n  alert('to be implemented')\r\n}\r\n\r\nasync function fetchDocsFromS1WS(sosource, fprms, series) {\r\n  var trdr\r\n  try {\r\n    trdr = parseInt(localStorage.getItem('trdr_retailer'))\r\n  } catch (err) {\r\n    alert('Please select a retailer')\r\n    console.log('Please select a retailer')\r\n    return\r\n  }\r\n  console.log('trdr', trdr)\r\n  //Open tab facturi\r\n  document.getElementById('facturi_link').click()\r\n  var daysOlder = document.getElementById('daysOlder').value\r\n  client\r\n    .service('getS1SqlData')\r\n    .find({\r\n      query: {\r\n        clientID: await client\r\n          .service('connectToS1')\r\n          .find()\r\n          .then((result) => {\r\n            return result.token\r\n          }),\r\n        appID: '1001',\r\n        SqlName: 'Retailers_Index_Docs',\r\n        trdr: trdr,\r\n        sosource: sosource,\r\n        fprms: fprms,\r\n        series: series,\r\n        daysOlder: daysOlder\r\n      }\r\n    })\r\n    .then(async (result) => {\r\n      console.debug(JSON.stringify(result, null, 2))\r\n      displayDocsForRetailers(result, trdr, sosource, fprms, series)\r\n    })\r\n}\r\n\r\nfunction displayDocsForRetailers(result, trdr, sosource, fprms, series) {\r\n  /*\r\n      response like {\r\n  \"success\": true,\r\n  \"totalcount\": 1,\r\n  \"rows\": [\r\n    {\r\n      \"findoc\": \"1236204\"\r\n      \"trndate\": \"2023-09-20 00:00:00\",\r\n      \"fincode\": \"FAEX-PF-16625\",\r\n      \"sumamnt\": \"1888.45\"\r\n    }\r\n    ]\r\n  }\r\n      */\r\n  const tbody = document.getElementById('facturiTableBody')\r\n  tbody.innerHTML = ''\r\n  if (result.success == false) {\r\n    var tr = tbody.insertRow()\r\n    var td = tr.insertCell()\r\n    td.innerHTML = 'Error: ' + result.error\r\n    td.colSpan = 3\r\n    td.style.textAlign = 'center'\r\n    return\r\n  }\r\n\r\n  if (result.totalcount == 0) {\r\n    var tr = tbody.insertRow()\r\n    var td = tr.insertCell()\r\n    td.innerHTML = 'No data'\r\n    td.colSpan = 6\r\n    td.style.textAlign = 'center'\r\n    td.style.color = 'red'\r\n    td.style.fontWeight = 'bold'\r\n    td.style.fontSize = '20px'\r\n    return\r\n  }\r\n\r\n  result.rows.forEach((row) => {\r\n    var tr = tbody.insertRow()\r\n    var findoc = tr.insertCell()\r\n    findoc.innerHTML = row.findoc\r\n    //hide findoc\r\n    findoc.style.display = 'none'\r\n    var trndate = tr.insertCell()\r\n    //trndate.innerHTML = row.trndate\r\n    //check for ' 00:00:00'\r\n    if (row.trndate.indexOf(' 00:00:00') > -1) {\r\n      trndate.innerHTML = row.trndate.replace(' 00:00:00', '')\r\n    } else {\r\n      trndate.innerHTML = row.trndate\r\n    }\r\n    var fincode = tr.insertCell()\r\n    //add row.fincode and a empty text input all inlined; input text has unique id\r\n    fincode.innerHTML =\r\n      row.fincode +\r\n      '<input type=\"text\" id=\"' +\r\n      row.fincode +\r\n      '_postfix\" class=\"input is-small ml-2\" style=\"width: 100px;\">'\r\n    var sumamnt = tr.insertCell()\r\n    sumamnt.innerHTML = row.sumamnt\r\n    //create actions cell\r\n    var actions = tr.insertCell()\r\n\r\n    //create xml button\r\n    var button2 = document.createElement('button')\r\n    button2.className = 'button is-small is-info ml-2'\r\n    button2.innerHTML = 'Create XML'\r\n    button2.onclick = async function () {\r\n      /* var domObj = await createXML(row.findoc, trdr, sosource, fprms, series)\r\n      //wait for domObj\r\n      while (domObj == undefined) {\r\n        await new Promise((resolve) => setTimeout(resolve, 1000))\r\n      }\r\n      console.log('domObj', domObj)\r\n      //var domObj = await cheatGetXmlFromS1(row.findoc)\r\n      if (domObj.trimis == true) {\r\n        alert('Factura a fost deja trimisa')\r\n        return\r\n      }*/\r\n      const domObj = await cheatGetXmlFromS1(row.findoc)\r\n      /*\r\n      if (domObj.trimis == false) { */\r\n      //add cell and textarea\r\n      var textarea = document.createElement('textarea')\r\n      textarea.className = 'textarea is-small'\r\n      textarea.rows = 10\r\n      textarea.cols = 50\r\n      textarea.innerHTML = domObj.dom\r\n      //no spellcheck\r\n      textarea.spellcheck = false\r\n      //add cell\r\n      var td = tr.insertCell()\r\n      td.appendChild(textarea)\r\n      //}\r\n    }\r\n    actions.appendChild(button2)\r\n    //save xml button\r\n    var button3 = document.createElement('button')\r\n    button3.className = 'button is-small is-primary ml-2'\r\n    button3.innerHTML = 'Save XML'\r\n    button3.onclick = async function () {\r\n      //const xml = await createXML(row.findoc, trdr, sosource, fprms, series)\r\n      const domObj = await cheatGetXmlFromS1(row.findoc)\r\n      if (domObj.trimis == true) {\r\n        alert('Factura a fost deja trimisa')\r\n        return\r\n      } else {\r\n        const xml = domObj.dom\r\n        domObj.filename = getNewFilenamePostfix(domObj.filename, row)\r\n        //save the xml to file\r\n        var xmlBlob = new Blob([xml], { type: 'text/xml' })\r\n        var xmlURL = window.URL.createObjectURL(xmlBlob)\r\n        var tempLink = document.createElement('a')\r\n        tempLink.href = xmlURL\r\n        tempLink.setAttribute('download', domObj.filename + '.xml')\r\n        tempLink.click()\r\n      }\r\n    }\r\n    actions.appendChild(button3)\r\n    var button = document.createElement('button')\r\n    button.className = 'button is-small is-success ml-2'\r\n    //set id\r\n    button.id = row.findoc + '_sendInvoice'\r\n    button.innerHTML = 'Send Invoice'\r\n    button.onclick = async function () {\r\n      sendAndMark(row, tr, button.id)\r\n    }\r\n    actions.appendChild(button)\r\n    //add cell trimis\r\n    var trimis = tr.insertCell()\r\n    //add class for trimis\r\n    trimis.className = 'trimis'\r\n    //trimis.innerHTML = row.CCCXMLSendDate\r\n    if (row.CCCXMLSendDate) {\r\n      trimis.innerHTML = '<i class=\"fas fa-xl fa-check-circle has-text-success\"></i>  ' + row.CCCXMLSendDate\r\n      //add link to trimis cell for resending invoice with overrideTrimis = true\r\n      var resend = document.createElement('a')\r\n      resend.innerHTML = 'Resend'\r\n      resend.className = 'button is-small is-danger ml-2'\r\n      resend.onclick = async function () {\r\n        //ask if sure\r\n        var r = confirm('Resend invoice?')\r\n        if (r == true) {\r\n          sendAndMark(row, tr, button.id, true)\r\n        }\r\n      }\r\n      trimis.appendChild(resend)\r\n    } else {\r\n      trimis.innerHTML = '<i class=\"fas fa-xl fa-times-circle has-text-danger\"></i>'\r\n    }\r\n  })\r\n}\r\n\r\nasync function sendAndMark(row, tr, elemId, overrideTrimis = false) {\r\n  //send invoice\r\n  var button = document.getElementById(elemId)\r\n  var domObj = await cheatGetXmlFromS1(row.findoc)\r\n  if (domObj.trimis == true && overrideTrimis == false) {\r\n    alert('Factura a fost deja trimisa')\r\n    return\r\n  }\r\n  //update btn caption to sending\r\n  //font awesome spinner\r\n  button.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i>Sending...'\r\n  //alter domObj filename with postfix\r\n  domObj.filename = getNewFilenamePostfix(domObj.filename, row)\r\n  await sendInvoice(row.findoc, domObj, overrideTrimis).then(async (response) => {\r\n    //update btn caption to sent\r\n    button.innerHTML = 'Sent'\r\n    console.log('response', response)\r\n    var xml = response.xml\r\n    var success = response.success\r\n    if (success == true) {\r\n      //add cell and textarea\r\n      var textarea = document.createElement('textarea')\r\n      textarea.className = 'textarea is-small'\r\n      textarea.rows = 10\r\n      textarea.cols = 50\r\n      textarea.innerHTML = xml\r\n      //no spellcheck\r\n      textarea.spellcheck = false\r\n      //add cell\r\n      var td = tr.insertCell()\r\n      td.appendChild(textarea)\r\n    }\r\n    var body = {}\r\n    body['service'] = 'setData'\r\n    body['clientID'] = await client\r\n      .service('connectToS1')\r\n      .find()\r\n      .then((result) => {\r\n        return result.token\r\n      })\r\n    body['appId'] = '1001'\r\n    body['OBJECT'] = 'SALDOC'\r\n    body['FORM'] = 'EFIntegrareRetailers'\r\n    body['KEY'] = row.findoc\r\n    body['DATA'] = {}\r\n    body['DATA']['MTRDOC'] = [{ CCCXMLSendDate: new Date().toISOString().slice(0, 19).replace('T', ' ') }]\r\n    console.log('body', body)\r\n    await client\r\n      .service('setDocument')\r\n      .create(body)\r\n      .then((res) => {\r\n        console.log(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  })\r\n  //update btn caption to sent\r\n  button.innerHTML = 'Sent Invoice'\r\n  //find cell class=\"trimis\" in current row and add date now and green check\r\n  var trimis = tr.getElementsByClassName('trimis')[0]\r\n  trimis.innerHTML =\r\n    '<i class=\"fas fa-xl fa-check-circle has-text-success\"></i>  ' +\r\n    new Date().toISOString().slice(0, 19).replace('T', ' ')\r\n}\r\n\r\nasync function sendInvoice(findoc, domObj, overrideTrimis = false) {\r\n  var response = { success: false, xml: '' }\r\n  var localStorageRetailer\r\n  try {\r\n    localStorageRetailer = parseInt(localStorage.getItem('trdr_retailer'))\r\n  } catch (err) {\r\n    alert('Please select a retailer')\r\n    return\r\n  }\r\n\r\n  console.log('localStorageRetailer', localStorageRetailer)\r\n\r\n  if (domObj.trimis == false || overrideTrimis == true) {\r\n    //uploadXml service\r\n    var xml = domObj.dom\r\n    var filename = domObj.filename\r\n    await client\r\n      .service('sftp')\r\n      .uploadXml(\r\n        { findoc: findoc, xml: xml, filename: filename },\r\n        { query: { retailer: localStorageRetailer } }\r\n      )\r\n      .then((res) => {\r\n        console.log('sftp uploadXml', res)\r\n        if (res && Object.keys(res).length > 0 && Object.hasOwnProperty.call(res, 'success')) {\r\n          if (res.success == true) {\r\n            alert('Factura fost trimisa cu succes sub denumirea ' + res.filename + ' (' + res.findoc + ')')\r\n            response = { success: true, xml: xml }\r\n          } else {\r\n            alert('Eroare la trimiterea facturii')\r\n            response = { success: false, xml: xml }\r\n          }\r\n        } else {\r\n          alert('No response from server')\r\n          response = { success: false, xml: xml }\r\n        }\r\n      })\r\n  } else {\r\n    alert('Factura a fost deja trimisa')\r\n    response = { success: false, xml: xml }\r\n  }\r\n  return response\r\n}\r\n\r\nfunction getNewFilenamePostfix(filename, row) {\r\n  var postfixElem = document.getElementById(row.fincode + '_postfix')\r\n  var posfixVal = ''\r\n  try {\r\n    posfixVal = postfixElem.value\r\n    console.log('posfix', posfixVal)\r\n  } catch (err) {\r\n    console.log('no postfix')\r\n  }\r\n  //filename like INVOIC_17713_VAT_RO25190857.xml; split before_vat then add postfix then add _vat...\r\n  var split = filename.split('_')\r\n  //get INVOIC_17713 then add _postfix then add _VAT...\r\n  var newFilename = posfixVal\r\n    ? split[0] + '_' + split[1] + posfixVal + '_' + split[2] + '_' + split[3]\r\n    : filename\r\n\r\n  return newFilename\r\n}\r\n\r\nasync function createLOCATEINFO(trdr, sosource, fprms, series) {\r\n  //scenariul 2\r\n  //get distinct S1TABLE1, for grouping data\r\n  //get xml mappings for trdr, sosource, fprms, series from cccdocumentes1mappings\r\n  //get CCCDOCUMENTES1MAPPINGS for trdr_retailer, source, fprms, series\r\n  var res = await client\r\n    .service('CCCDOCUMENTES1MAPPINGS')\r\n    .find({ query: { TRDR_RETAILER: trdr, SOSOURCE: sosource, FPRMS: fprms, SERIES: series } })\r\n  var CCCDOCUMENTES1MAPPINGS = res.data[0].CCCDOCUMENTES1MAPPINGS\r\n  //get CCCXMLS1MAPPINGS for CCCDOCUMENTES1MAPPINGS\r\n  var res = await client\r\n    .service('CCCXMLS1MAPPINGS')\r\n    .find({ query: { CCCDOCUMENTES1MAPPINGS: CCCDOCUMENTES1MAPPINGS } })\r\n  console.log('CCCXMLS1MAPPINGS', res)\r\n  var CCCXMLS1MAPPINGS = res.data\r\n  var distinctS1TABLE1 = []\r\n  CCCXMLS1MAPPINGS.forEach((item) => {\r\n    if (item.S1TABLE1 && distinctS1TABLE1.indexOf(item.S1TABLE1) == -1) {\r\n      distinctS1TABLE1.push(item.S1TABLE1)\r\n    }\r\n  })\r\n\r\n  var distinctS1TABLE2 = []\r\n  CCCXMLS1MAPPINGS.forEach((item) => {\r\n    if (item.S1TABLE2 && distinctS1TABLE2.indexOf(item.S1TABLE2) == -1) {\r\n      distinctS1TABLE2.push(item.S1TABLE2)\r\n    }\r\n  })\r\n\r\n  //create LOCATEINFO\r\n  var LOCATEINFO = ''\r\n  distinctS1TABLE1.forEach((item) => {\r\n    var S1TABLE1 = item\r\n    var S1FIELD1 = ''\r\n    CCCXMLS1MAPPINGS.forEach((item) => {\r\n      if (item.S1TABLE1 && item.S1FIELD1 && item.S1TABLE1 == S1TABLE1) {\r\n        //if item.S1FIELD1 is not already in S1FIELD1\r\n        const split = S1FIELD1.split(',')\r\n        var wordExists = false\r\n        split.every((item2) => {\r\n          if (item2 == item.S1FIELD1) {\r\n            wordExists = true\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n        if (!wordExists) {\r\n          S1FIELD1 += item.S1FIELD1 + ','\r\n        }\r\n      }\r\n    })\r\n\r\n    S1FIELD1 = S1FIELD1.slice(0, -1)\r\n    LOCATEINFO += S1TABLE1 + ':' + S1FIELD1 + ';'\r\n  })\r\n\r\n  distinctS1TABLE2.forEach((item) => {\r\n    var S1TABLE2 = item\r\n    var S1FIELD2 = ''\r\n    CCCXMLS1MAPPINGS.forEach((item) => {\r\n      if (item.S1TABLE2 && item.S1FIELD2 && item.S1TABLE2 == S1TABLE2) {\r\n        //if item.S1FIELD2 is not already in S1FIELD2\r\n        const split = S1FIELD2.split(',')\r\n        var wordExists = false\r\n        split.every((item2) => {\r\n          if (item2 == item.S1FIELD2) {\r\n            wordExists = true\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n        if (!wordExists) {\r\n          S1FIELD2 += item.S1FIELD2 + ','\r\n        }\r\n      }\r\n    })\r\n\r\n    S1FIELD2 = S1FIELD2.slice(0, -1)\r\n    //check if locateinfo contains S1TABLE2 already\r\n    var split = LOCATEINFO.split(';')\r\n    var tableExists = false\r\n    split.every((item) => {\r\n      if (item.split(':')[0] == S1TABLE2) {\r\n        tableExists = true\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n    if (!tableExists) {\r\n      LOCATEINFO += S1TABLE2 + ':' + S1FIELD2 + ';'\r\n    } else {\r\n      //add S1FIELD2 to LOCATEINFO\r\n      split.every((item, index) => {\r\n        if (item.split(':')[0] == S1TABLE2) {\r\n          split[index] = item + ',' + S1FIELD2\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n      LOCATEINFO = split.join(';')\r\n    }\r\n  })\r\n\r\n  LOCATEINFO = LOCATEINFO.slice(0, -1)\r\n\r\n  return { LOCATEINFO: LOCATEINFO, CCCXMLS1MAPPINGS: CCCXMLS1MAPPINGS }\r\n}\r\n\r\nfunction createXMLDOM(CCCXMLS1MAPPINGS) {\r\n  //create xml dom\r\n  var xmlDom = document.implementation.createDocument('', '', null)\r\n  //root node <= first node from xml mappings split by '/'\r\n  var root = xmlDom.createElement(CCCXMLS1MAPPINGS[0].XMLNODE.split('/')[0])\r\n  xmlDom.appendChild(root)\r\n  //add xml elements to xml dom\r\n  CCCXMLS1MAPPINGS.forEach((item) => {\r\n    var xmlNodes = item.XMLNODE.split('/')\r\n    //add xml elements to xml dom\r\n    var root = xmlDom.documentElement //Order or...\r\n    for (var i = 1; i < xmlNodes.length; i++) {\r\n      var node\r\n      //verify if node already exists\r\n      if (root.getElementsByTagName(xmlNodes[i]).length > 0) {\r\n        node = root.getElementsByTagName(xmlNodes[i])[0]\r\n        root.appendChild(node)\r\n        root = node\r\n      } else {\r\n        try {\r\n          node = xmlDom.createElement(xmlNodes[i])\r\n          //give it a dummy value in order to be able to append it; but just for the last node\r\n          if (i == xmlNodes.length - 1) node.textContent = 'dummy'\r\n          root.appendChild(node)\r\n          root = node\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return xmlDom\r\n}\r\n\r\nasync function populateXMLDOMScenariu2(xmlDom, CCCXMLS1MAPPINGS, S1ObjData) {\r\n  //scenariul 2\r\n  //match xml nodes with S1 Table 1 and S1 Field 1\r\n  const mainNode = 'DXInvoice'\r\n  var x = xmlDom.getElementsByTagName(mainNode)\r\n  var obj = xml2json(x[0])\r\n  console.log('xml2json', obj)\r\n  //get node name for lines; select id \"delimitareLinieDocument\"\r\n  const linesNode = 'InvoiceLine'\r\n  //cut obj in two parts: header and lines; lines are in an array (obj.OrderLine)\r\n  var header = {}\r\n  var lines = {}\r\n  for (var i in obj) {\r\n    if (i == linesNode) {\r\n      lines[i] = obj[i]\r\n    } else {\r\n      header[i] = obj[i]\r\n    }\r\n  }\r\n  console.log('header', header)\r\n  console.log('lines', lines)\r\n  var headerArrayOfObjects = []\r\n  var linesArrayOfObjects = []\r\n  recurse(header, [], mainNode, null, null, headerArrayOfObjects)\r\n  recurse(lines, [], mainNode, null, null, linesArrayOfObjects)\r\n\r\n  await mapS1ObjDataToArrayOfObjects(xmlDom, S1ObjData, CCCXMLS1MAPPINGS, headerArrayOfObjects)\r\n\r\n  const S1Table1 = 'ITELINES'\r\n  const S1ObjDataLines = S1ObjData[S1Table1]\r\n  //map S1ObjDataLines to linesArrayOfObjects through CCCXMLS1MAPPINGS\r\n  S1ObjDataLines.forEach(async (line) => {\r\n    //create a new xml node for each line by cloning the first line node\r\n    //for the first line select the first lineNode\r\n    //for the next lines clone and append the first lineNode\r\n    if (S1ObjDataLines.indexOf(line) == 0) {\r\n      var node = xmlDom.getElementsByTagName(linesNode)[0]\r\n    } else {\r\n      var node = xmlDom.getElementsByTagName(linesNode)[0].cloneNode(true)\r\n      //add node to xmlDom\r\n      xmlDom.getElementsByTagName(mainNode)[0].appendChild(node)\r\n    }\r\n    //map line to linesArrayOfObjects\r\n    await mapS1ObjDataToArrayOfObjects(xmlDom, { ITELINES: [line] }, CCCXMLS1MAPPINGS, linesArrayOfObjects)\r\n  })\r\n\r\n  //alert(xmlDom.getElementsByTagName(mainNode)[0].innerHTML)\r\n}\r\n\r\nasync function mapS1ObjDataToArrayOfObjects(xmlDom, S1ObjData, CCCXMLS1MAPPINGS, arrayOfObjects) {\r\n  console.log({ S1ObjData, CCCXMLS1MAPPINGS, arrayOfObjects })\r\n  var arrays = []\r\n  arrayOfObjects.forEach(async (item) => {\r\n    //flatten item xmlPath so as to compare it with CCCXMLS1MAPPINGS\r\n    var xmlPath =\r\n      item.parent && item.parent.length > 0\r\n        ? item.root + '/' + item.parent.join('/') + '/' + item.i\r\n        : item.root + '/' + item.i\r\n    console.log('xmlPath', xmlPath)\r\n    CCCXMLS1MAPPINGS.forEach(async (item2) => {\r\n      if (item2.XMLNODE == xmlPath) {\r\n        console.log('pair found', item2)\r\n        console.log('S1ObjData[item2.S1TABLE1]', S1ObjData[item2.S1TABLE1])\r\n        //set node value\r\n        if (S1ObjData[item2.S1TABLE1]) {\r\n          if (S1ObjData[item2.S1TABLE1].length > 1) {\r\n            arrays.push({\r\n              mapping: item2,\r\n              iterations: S1ObjData[item2.S1TABLE1].length,\r\n              S1Data: S1ObjData[item2.S1TABLE1]\r\n            })\r\n          } else {\r\n            var node = findNodeInXMLDOM(xmlDom, item2.XMLNODE)\r\n            //if found, set node value else create node and set value\r\n            if (node) {\r\n              var value = S1ObjData[item2.S1TABLE1][0][item2.S1FIELD1]\r\n              console.log('node', node)\r\n              console.log('S1ObjData[item2.S1TABLE1]', S1ObjData[item2.S1TABLE1])\r\n              //check for 123|RON and get RON\r\n              if (value && value.indexOf('|') > -1) {\r\n                value = value.split('|')[1]\r\n              }\r\n              //check for 2023-09-20 00:00:00 and get 2023-09-20\r\n              //only for strings resambling dates\r\n              if (value && value.indexOf('-') > -1 && value.indexOf(':') > -1) {\r\n                value = value.split(' ')[0]\r\n              }\r\n              node.textContent = value\r\n            } else {\r\n              //create node and set value\r\n              console.log('create node and set value')\r\n              var node = xmlDom.createElement(item2.XMLNODE.split('/')[item2.XMLNODE.split('/').length - 1])\r\n              node.textContent = S1ObjData[item2.S1TABLE1][0][item2.S1FIELD1]\r\n              findNodeInXMLDOM(xmlDom, item2.XMLNODE).parentNode.appendChild(node)\r\n            }\r\n          }\r\n        } else {\r\n          if (item2.SQL) {\r\n            console.log('has SQL', item2.SQL)\r\n            //set node value\r\n            //if sql SELECT PERCNT FROM VAT WHERE VAT={S1Table1.S1Field1} or SELECT PERCNT FROM VAT WHERE VAT={S1Table1.S1Field1} and VAT2={S1Table1.S1Field2}\r\n            //then replace {S1Table1.S1Field1} with S1ObjData[S1Table1][0][S1Field1]\r\n            //and {S1Table1.S1Field2} with S1ObjData[S1Table1][0][S1Field2]\r\n            //then execute the query and set node value\r\n            //else execute the query and set node value\r\n            //set params' query\r\n            var params = {}\r\n            params['query'] = {}\r\n            //replace {S1Table1.S1Field1} with S1ObjData[S1Table1][0][S1Field1]\r\n            //and {S1Table1.S1Field2} with S1ObjData[S1Table1][0][S1Field2]\r\n            //parse and replace {s1table1.s1field1} with S1ObjData[item.S1TABLE1][0][item.S1FIELD1] or {s1table1.s1field2} with S1ObjData[item.S1TABLE2][0][item.S1FIELD2]\r\n            var sqlQuery = item2.SQL\r\n            var regex = /{([^}]+)}/g\r\n            var matches = sqlQuery.match(regex)\r\n            console.log('matches', matches)\r\n            if (matches) {\r\n              matches.forEach((match) => {\r\n                try {\r\n                  var s1table = match.split('.')[0].replace('{', '')\r\n                  var s1field = match.split('.')[1].replace('}', '')\r\n                  //upper case\r\n                  s1table = s1table.toUpperCase()\r\n                  s1field = s1field.toUpperCase()\r\n                  console.log('s1table', s1table)\r\n                  console.log('s1field', s1field)\r\n                  console.log('match', match)\r\n                  console.log('S1ObjData[s1table]', S1ObjData[item2[s1table]])\r\n                  console.log('S1ObjData[s1table][0]', S1ObjData[item2[s1table]][0])\r\n                  console.log('S1ObjData[s1table][0][s1field]', S1ObjData[item2[s1table]][0][item2[s1field]])\r\n                  sqlQuery = sqlQuery.replace(match, S1ObjData[item2[s1table]][0][item2[s1field]])\r\n                } catch (err) {\r\n                  console.log(sqlQuery, err)\r\n                }\r\n              })\r\n            }\r\n            console.log('sqlQuery', sqlQuery)\r\n            params['query']['sqlQuery'] = sqlQuery\r\n\r\n            var node = findNodeInXMLDOM(xmlDom, item2.XMLNODE)\r\n            //if found, set node value else create node and set value\r\n            if (node) {\r\n              var res = await client.service('getDataset').find(params)\r\n              console.log('getDataset for ' + item2.XMLNODE, res)\r\n              if (res.data) {\r\n                node.textContent = res.data\r\n              }\r\n            } else {\r\n              //create node and set value\r\n              console.log('create node and set value')\r\n              var node = xmlDom.createElement(item2.XMLNODE.split('/')[item2.XMLNODE.split('/').length - 1])\r\n              var res = await client.service('getDataset').find(params)\r\n              console.log('getDataset for ' + item2.XMLNODE, res.data)\r\n              if (res.data) {\r\n                node.textContent = res.data\r\n              }\r\n              findNodeInXMLDOM(xmlDom, item2.XMLNODE).parentNode.appendChild(node)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  if (arrays.length > 0) {\r\n    console.log('arrays', arrays)\r\n\r\n    //zoom out from array to whole sequence\r\n    var sequences = []\r\n    var lastPath = ''\r\n    arrays.forEach((obj) => {\r\n      //find in CCCXMLS1MAPPINGS the all nodes sharing the shortest path\r\n      var xmlNodes = obj.mapping.XMLNODE.split('/')\r\n      path = xmlNodes.slice(0, xmlNodes.length - 1).join('/')\r\n      if (path != lastPath) {\r\n        console.log('path', path)\r\n\r\n        var alike = []\r\n        CCCXMLS1MAPPINGS.forEach((mapping) => {\r\n          if (mapping.XMLNODE.includes(path)) {\r\n            alike.push(mapping)\r\n          }\r\n        })\r\n        sequences.push({ path: path, mappings: alike, iterations: obj.iterations, S1Data: obj.S1Data })\r\n        lastPath = path\r\n      }\r\n    })\r\n\r\n    console.log('sequences', sequences)\r\n\r\n    //map sequences to S1ObjData through CCCXMLS1MAPPINGS\r\n    //map sequences to xmlDom\r\n    //for each sequences[i].path, loop sequences[i].iterations times and find in S1ObjData the corresponding values\r\n    //then add them to xmlDom\r\n    sequences.forEach((sequence) => {\r\n      var seqPath = sequence.path\r\n      var seqMappings = sequence.mappings\r\n      var seqIterations = sequence.iterations\r\n      var seqData = sequence.S1Data\r\n      var refNode = findNodeInXMLDOM(xmlDom, seqPath)\r\n      console.log('refNode', refNode)\r\n      var newChild = refNode.cloneNode(true)\r\n      var sequenceNewNodes = []\r\n      seqData.forEach((item) => {\r\n        seqMappings.forEach((mapping) => {\r\n          console.log('mapping', mapping)\r\n          console.log('item', item)\r\n          console.log('seqPath', seqPath)\r\n          //substract seqPath from mapping.XMLNODE\r\n          var partialPath = mapping.XMLNODE.replace(seqPath + '/', '')\r\n          console.log('partialPath', partialPath)\r\n          splited = partialPath.split('/')\r\n          console.log('splited', splited)\r\n          console.log('splited root', partialPath.split('/')[0])\r\n          var rootExists = findRootInSequence([...sequenceNewNodes], partialPath.split('/')[0])\r\n          console.log('rootExists', rootExists)\r\n\r\n          if (!rootExists) {\r\n            //create new node\r\n            var newNode = xmlDom.createElement(partialPath.split('/')[0])\r\n            //add node to sequenceNewNodes\r\n            sequenceNewNodes.push(newNode)\r\n          } else {\r\n            //find node in sequenceNewNodes\r\n            var found = false\r\n            sequenceNewNodes.every((item2) => {\r\n              if (item2.nodeName == partialPath.split('/')[0]) {\r\n                found = true\r\n                console.log('found', item2.nodeName)\r\n                //adauga restul nodurilor\r\n                var node = item2\r\n                for (var i = 1; i < splited.length; i++) {\r\n                  //daca nu exista nodul, creeaza-l\r\n                  if (node.getElementsByTagName(splited[i]).length == 0) {\r\n                    var newNode = xmlDom.createElement(splited[i])\r\n                    node.appendChild(newNode)\r\n                    node = newNode\r\n                  }\r\n                }\r\n                console.log('nod ierarhic', node)\r\n                return false\r\n              }\r\n              return true\r\n            })\r\n          }\r\n        })\r\n        console.log('sequenceNewNodes', sequenceNewNodes)\r\n        sequenceNewNodes.forEach((item) => {\r\n          console.log('itemToBeAppended', item)\r\n          newChild.appendChild(item)\r\n        })\r\n        console.log('newChild', newChild)\r\n        refNode.parentNode.insertBefore(newChild, refNode.nextSibling)\r\n        newChild = null\r\n        newChild = refNode.cloneNode(true)\r\n        sequenceNewNodes = []\r\n        sequenceNewNodes.push(newChild)\r\n        console.log('sequenceNewNodes', sequenceNewNodes)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nfunction findRootInSequence(seqArr, nodeName) {\r\n  console.log('seqArr', seqArr)\r\n  console.log('nodeName', nodeName)\r\n  var found = false\r\n  seqArr.every((item) => {\r\n    if (item.nodeName == nodeName) {\r\n      found = true\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  return found\r\n}\r\n\r\nfunction findNodeInXMLDOM(xmlDom, xmlNode) {\r\n  var xmlNodes = xmlNode.split('/')\r\n  var root = xmlDom.documentElement\r\n  //find node in xmlDom, but do not change ierachy of nodes\r\n  for (var i = 0; i < xmlNodes.length; i++) {\r\n    var node\r\n    if (root.getElementsByTagName(xmlNodes[i]).length > 0) {\r\n      //first found node\r\n      //node = root.getElementsByTagName(xmlNodes[i])[0]\r\n      //last found node\r\n      node = root.getElementsByTagName(xmlNodes[i])[root.getElementsByTagName(xmlNodes[i]).length - 1]\r\n      root.appendChild(node)\r\n      root = node\r\n    }\r\n  }\r\n\r\n  return node\r\n}\r\n\r\nasync function populateXMLDOMScenariu1(xmlDom, CCCXMLS1MAPPINGS) {\r\n  //scenariul 1\r\n  CCCXMLS1MAPPINGS.forEach(async (item) => {\r\n    if (item.SQL && !item.SQL.includes('{')) {\r\n      //set node value\r\n      var node = findNodeInXMLDOM(xmlDom, item.XMLNODE)\r\n      var res = await client.service('getDataset').find({ query: { sqlQuery: item.SQL } })\r\n      console.log('getDataset', res)\r\n      if (res.data) {\r\n        node.textContent = res.data\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nasync function populateXMLDOMScenariu3(xmlDom, CCCXMLS1MAPPINGS, S1ObjData) {\r\n  //scenariul 3\r\n  CCCXMLS1MAPPINGS.forEach(async (item) => {\r\n    if (item.SQL && item.SQL.includes('{')) {\r\n      //set node value\r\n      var node = findNodeInXMLDOM(xmlDom, item.XMLNODE)\r\n      //parse and replace {s1table1.s1field1} with S1ObjData[item.S1TABLE1][0][item.S1FIELD1] or {s1table1.s1field2} with S1ObjData[item.S1TABLE2][0][item.S1FIELD2]\r\n      var sqlQuery = item.SQL\r\n      var regex = /{([^}]+)}/g\r\n      var matches = sqlQuery.match(regex)\r\n      console.log('matches', matches)\r\n      matches.forEach(async (match) => {\r\n        var s1table = match.split('.')[0].replace('{', '')\r\n        var s1field = match.split('.')[1].replace('}', '')\r\n        //upper case\r\n        s1table = s1table.toUpperCase()\r\n        s1field = s1field.toUpperCase()\r\n        console.log('s1table', s1table)\r\n        console.log('s1field', s1field)\r\n        console.log('match', match)\r\n        try {\r\n          console.log('item[s1table]]', item[s1table])\r\n          console.log('item[s1field]]', item[s1field])\r\n          try {\r\n            var val = S1ObjData[item[s1table]][0][item[s1field]]\r\n            //val could be 1|Buc\r\n            //if val is 1|Buc, then val = 1\r\n            if (val && val.indexOf('|') > -1) {\r\n              val = val.split('|')[0]\r\n            }\r\n            sqlQuery = sqlQuery.replace(match, val)\r\n            console.log('actual value', val)\r\n          } catch (err) {\r\n            console.log(err)\r\n            console.log(S1ObjData[item[s1table]])\r\n          }\r\n          console.log('sqlQuery', sqlQuery)\r\n          var res = await client.service('getDataset').find({ query: { sqlQuery: sqlQuery } })\r\n          console.log('getDataset', res)\r\n          if (res.data) {\r\n            node.textContent = res.data\r\n          }\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nasync function createXML(findoc, trdr, sosource, fprms, series) {\r\n  var ret = await createLOCATEINFO(trdr, sosource, fprms, series)\r\n  var LOCATEINFO = ret.LOCATEINFO\r\n  var CCCXMLS1MAPPINGS = ret.CCCXMLS1MAPPINGS\r\n  //sort CCCXMLS1MAPPINGS by XMLORDER\r\n  CCCXMLS1MAPPINGS.sort((a, b) => {\r\n    return a.XMLORDER - b.XMLORDER\r\n  })\r\n\r\n  console.log('LOCATEINFO', LOCATEINFO)\r\n  console.log('CCCXMLS1MAPPINGS', CCCXMLS1MAPPINGS)\r\n\r\n  //get data from S1; LOCATEINFO  results from reading data from xml mappings\r\n  var S1Obj = await client.service('getS1ObjData').find({\r\n    query: {\r\n      KEY: findoc,\r\n      clientID: await client\r\n        .service('connectToS1')\r\n        .find()\r\n        .then((result) => {\r\n          return result.token\r\n        }),\r\n      appID: '1001',\r\n      OBJECT: 'SALDOC',\r\n      FORM: 'EFIntegrareRetailers',\r\n      LOCATEINFO: LOCATEINFO\r\n    }\r\n  })\r\n\r\n  console.log('S1ObjData(LocateInfo)', S1Obj)\r\n  const S1ObjData = S1Obj.data\r\n\r\n  var header = 'DXInvoice/Invoice/'\r\n  var lines = 'DXInvoice/InvoiceLine/'\r\n\r\n  var CCCXMLS1MAPPINGS_HEADER = []\r\n  var CCCXMLS1MAPPINGS_LINES = []\r\n  CCCXMLS1MAPPINGS.forEach((item) => {\r\n    if (item.XMLNODE.includes(header)) {\r\n      CCCXMLS1MAPPINGS_HEADER.push(item)\r\n    }\r\n    if (item.XMLNODE.includes(lines)) {\r\n      CCCXMLS1MAPPINGS_LINES.push(item)\r\n    }\r\n  })\r\n\r\n  console.log('CCCXMLS1MAPPINGS_HEADER', CCCXMLS1MAPPINGS_HEADER)\r\n  console.log('CCCXMLS1MAPPINGS_LINES', CCCXMLS1MAPPINGS_LINES)\r\n\r\n  //header\r\n  var _HEADER = await joinThings(CCCXMLS1MAPPINGS_HEADER, S1ObjData)\r\n\r\n  //create xml dom\r\n  var xmlDomHeader = document.implementation.createDocument('', '', null)\r\n  var root = 'DXInvoice'\r\n  var root = xmlDomHeader.createElement(root)\r\n  xmlDomHeader.appendChild(root)\r\n\r\n  xmlDomHeader = createDomPart(_HEADER, xmlDomHeader)\r\n  console.log('xmlDomHeader', xmlDomHeader)\r\n\r\n  //lines\r\n  //S1ObjData but without ITELINES\r\n  var S1ObjDataNoITELINES = {}\r\n  Object.keys(S1ObjData).forEach((key) => {\r\n    if (key != 'ITELINES') {\r\n      S1ObjDataNoITELINES[key] = S1ObjData[key]\r\n    }\r\n  })\r\n  var S1ITELINES = S1ObjData['ITELINES']\r\n  var xmlDomLines = []\r\n  S1ITELINES.forEach(async (line) => {\r\n    var currLine = { ITELINES: [line] }\r\n    //add currLine to S1ObjDataNoITELINES\r\n    var S1ObjDataNoITELINES_currLine = Object.assign({}, S1ObjDataNoITELINES, currLine)\r\n    console.log('currLine', currLine)\r\n    joinThings(CCCXMLS1MAPPINGS_LINES, S1ObjDataNoITELINES_currLine).then((part) => {\r\n      console.log('part', part)\r\n      var xmlDomLine = document.implementation.createDocument('', '', null)\r\n      var root = 'DXInvoice'\r\n      var root = xmlDomLine.createElement(root)\r\n      xmlDomLine.appendChild(root)\r\n      xmlDomLine = createDomPart(part, xmlDomLine)\r\n      xmlDomLines.push(xmlDomLine)\r\n    })\r\n  })\r\n\r\n  //wait until xmlDomLines is populated, meaning xmlDomLines.length == S1ITELINES.length\r\n  while (xmlDomLines.length < S1ITELINES.length) {\r\n    await new Promise((resolve) => setTimeout(resolve, 100))\r\n  }\r\n\r\n  console.log('xmlDomLines', xmlDomLines)\r\n\r\n  //take xmlDomHeader and xmlDomLines and merge them into one xmlDom\r\n  var xmlDom = xmlDomHeader\r\n  xmlDomLines.forEach((item) => {\r\n    var xmlNodes = item.documentElement.childNodes\r\n    for (var i = 0; i < xmlNodes.length; i++) {\r\n      xmlDom.documentElement.appendChild(xmlNodes[i])\r\n    }\r\n  })\r\n\r\n  console.log('xmlDom', xmlDom)\r\n\r\n  //return DXInvoice from document\r\n  var xml = xmlDom.getElementsByTagName('DXInvoice')[0].outerHTML\r\n\r\n  return { dom: xml, trimis: false }\r\n\r\n  async function joinThings(CCCXMLS1MAPPINGS_PART, S1ObjData) {\r\n    var _PART = []\r\n    CCCXMLS1MAPPINGS_PART.forEach(async (item) => {\r\n      item.SQL = item.SQL.trim()\r\n      var o = {}\r\n      o.xmlNode = item.XMLNODE\r\n      o.table1 = item.S1TABLE1 || null\r\n      o.field1 = item.S1FIELD1 || null\r\n      if (item.S1TABLE1 && item.S1FIELD1) {\r\n        possibleArray = S1ObjData[item.S1TABLE1]\r\n        if (possibleArray && possibleArray.length == 1) {\r\n          o.value1 = S1ObjData[item.S1TABLE1][0][item.S1FIELD1] || 'n/a'\r\n        } else if (possibleArray && possibleArray.length > 1) {\r\n          o.value1 = []\r\n          possibleArray.forEach((item2) => {\r\n            o.value1.push(item2[item.S1FIELD1])\r\n          })\r\n        } else {\r\n          o.value1 = 'n/a'\r\n        }\r\n        if (o.value1 && o.value1.indexOf('|') > -1) {\r\n          o.value1 = o.value1.split('|')[0]\r\n        }\r\n        //if o.value1 is an arrat then check every item for | and split it\r\n        if (Array.isArray(o.value1)) {\r\n          o.value1.forEach((item2, index) => {\r\n            if (item2.indexOf('|') > -1) {\r\n              o.value1[index] = item2.split('|')[0]\r\n            }\r\n          })\r\n        }\r\n        o.value = o.value1\r\n      } else {\r\n        o.value1 = 'n/a'\r\n        o.value = 'n/a'\r\n      }\r\n      if (item.SQL == '') {\r\n        //...\r\n      } else {\r\n        item.SQL = item.SQL.replace(/\\n/g, ' ').replace(/\\r/g, ' ')\r\n        o.table2 = item.S1TABLE2 || null\r\n        o.field2 = item.S1FIELD2 || null\r\n        o.value2 = item.S1TABLE2 && item.S1FIELD2 ? S1ObjData[item.S1TABLE2][0][item.S1FIELD2] : 'n/a'\r\n        o.sql = item.SQL\r\n        var sqlQuery = item.SQL\r\n        if (o.value2 && o.value2.indexOf('|') > -1) {\r\n          o.value2 = o.value2.split('|')[0]\r\n        }\r\n        if (item.SQL.includes('{S1Table1.S1Field1}')) {\r\n          sqlQuery = sqlQuery.replace('{S1Table1.S1Field1}', o.value1)\r\n        }\r\n\r\n        if (item.SQL.includes('{S1Table2.S1Field2}')) {\r\n          sqlQuery = sqlQuery.replace('{S1Table2.S1Field2}', o.value2)\r\n        }\r\n\r\n        o.sqlQuery = sqlQuery\r\n        //value = await client.service('getDataset').find(params)\r\n        var params = {}\r\n        params['query'] = {}\r\n        params['query']['sqlQuery'] = sqlQuery\r\n        var res = await client.service('getDataset').find(params)\r\n        console.log('sqlQuery', sqlQuery, 'queryResponse', res)\r\n        if (res.data) {\r\n          //for xml path ('') [1,2,3]\r\n          if (res.data.indexOf('[') > -1) {\r\n            o.value = JSON.parse(res.data)\r\n          } else {\r\n            o.value = res.data\r\n          }\r\n        }\r\n      }\r\n      _PART.push(o)\r\n    })\r\n\r\n    //wait until _HEADER is populated, meaning _HEADER.length == CCCXMLS1MAPPINGS_HEADER.length\r\n    while (_PART.length < CCCXMLS1MAPPINGS_PART.length) {\r\n      await new Promise((resolve) => setTimeout(resolve, 100))\r\n    }\r\n\r\n    //sort _HEADER by xmlNode alphabetically\r\n    /* _PART.sort((a, b) => {\r\n      var txtA = a.xmlNode.toUpperCase()\r\n      var txtB = b.xmlNode.toUpperCase()\r\n      return txtA < txtB ? -1 : txtA > txtB ? 1 : 0\r\n    }) */\r\n\r\n    return _PART\r\n  }\r\n\r\n  function createDomPart(_PART, xmlDom) {\r\n    _PART.forEach((item) => {\r\n      console.log({ xml: item.xmlNode, value: item.value })\r\n      var xmlNodes = item.xmlNode.split('/')\r\n      //add xml elements to xml dom\r\n      var root = xmlDom.documentElement\r\n      for (var i = 1; i < xmlNodes.length; i++) {\r\n        var node\r\n        var existingElements = root.getElementsByTagName(xmlNodes[i])\r\n        //verify if node already exists\r\n        if (existingElements.length > 0) {\r\n          node = existingElements[existingElements.length - 1]\r\n          root.appendChild(node)\r\n          root = node\r\n        } else {\r\n          try {\r\n            node = xmlDom.createElement(xmlNodes[i])\r\n            //give it a dummy value in order to be able to append it; but just for the last node\r\n            if (i == xmlNodes.length - 1) node.textContent = item.value\r\n            root.appendChild(node)\r\n            root = node\r\n          } catch (err) {\r\n            console.log(err)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    //find in _HEADER item.value as array\r\n    var whatToReplace = []\r\n    _PART.forEach((item) => {\r\n      if (Array.isArray(item.value)) {\r\n        var parentName = item.xmlNode.split('/')[item.xmlNode.split('/').length - 2]\r\n        //copy parent node with all its children item.value times with different values\r\n        whatToReplace.push({\r\n          parent: xmlDom.getElementsByTagName(parentName)[0],\r\n          childToChange: item.xmlNode.split('/')[item.xmlNode.split('/').length - 1],\r\n          value: item.value\r\n        })\r\n      }\r\n    })\r\n\r\n    console.log('whatToReplace', whatToReplace)\r\n\r\n    //regroup children of whatToReplace by parent; eg: whatToReplace.parent <> array of childToChange/value with said parent\r\n    var distinctParents = []\r\n    whatToReplace.forEach((item) => {\r\n      if (distinctParents.indexOf(item.parent) == -1) {\r\n        distinctParents.push(item.parent)\r\n      }\r\n    })\r\n\r\n    var groupedByParent = []\r\n    distinctParents.forEach((parent) => {\r\n      whatToReplace.forEach((item) => {\r\n        if (item.parent == parent) {\r\n          //find in groupedByParent if parent exists\r\n          var found = false\r\n          groupedByParent.every((item2) => {\r\n            if (item2.parent == parent) {\r\n              found = true\r\n              item2.children.push({ childToChange: item.childToChange, value: item.value })\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n          if (!found) {\r\n            groupedByParent.push({\r\n              parent: parent,\r\n              children: [{ childToChange: item.childToChange, value: item.value }]\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    console.log('groupedByParent', groupedByParent)\r\n\r\n    //for each distinct parent, clone it by the first childToChange/value\r\n    //then change the values of the childToChange nodes\r\n    groupedByParent.forEach((item) => {\r\n      var parent = item.parent\r\n      var times = item.children[0].value.length\r\n      console.log('times', times)\r\n      //clone parent times times but keep the original parent, so I don't have to delete it later\r\n      for (var i = 1; i < times; i++) {\r\n        var clone = parent.cloneNode(true)\r\n        parent.parentNode.appendChild(clone)\r\n      }\r\n\r\n      var clones = []\r\n      //get cloned elements plus the original one\r\n      clones = xmlDom.getElementsByTagName(parent.nodeName)\r\n      console.log('clones', clones)\r\n\r\n      var arrClones = Array.from(clones)\r\n\r\n      arrClones.forEach((clone, index) => {\r\n        //change childToChange/value\r\n        item.children.forEach((item2) => {\r\n          var childToChange = item2.childToChange\r\n          var value = item2.value[index]\r\n          console.log('childToChange', childToChange)\r\n          console.log('value', value)\r\n          clone.getElementsByTagName(childToChange)[0].textContent = value\r\n        })\r\n      })\r\n    })\r\n\r\n    //parse xmlDom thru DOMParser\r\n    var xmlString = new XMLSerializer().serializeToString(xmlDom)\r\n    var parser = new DOMParser()\r\n    var xmlDomm = parser.parseFromString(xmlString, 'text/xml')\r\n\r\n    return xmlDomm\r\n  }\r\n\r\n  // var xmlDom = createXMLDOM(CCCXMLS1MAPPINGS)\r\n\r\n  // console.log('xmlDom', xmlDom)\r\n\r\n  // await populateXMLDOMScenariu2(xmlDom, CCCXMLS1MAPPINGS, S1ObjData)\r\n\r\n  // //await populateXMLDOMScenariu1(xmlDom, CCCXMLS1MAPPINGS)\r\n\r\n  // //await populateXMLDOMScenariu3(xmlDom, CCCXMLS1MAPPINGS, S1ObjData)\r\n\r\n  // console.log('xmlDom', xmlDom)\r\n\r\n  // //return xml innerHTML\r\n  // return xmlDom.getElementsByTagName('DXInvoice')[0].innerHTML\r\n}\r\n\r\nasync function cheatGetXmlFromS1(findoc) {\r\n  var dom = await client.service('getInvoiceDom').find({\r\n    query: {\r\n      clientID: await client\r\n        .service('connectToS1')\r\n        .find()\r\n        .then((result) => {\r\n          return result.token\r\n        }),\r\n      appID: '1001',\r\n      findoc: findoc\r\n    }\r\n  })\r\n\r\n  console.log('dom', dom)\r\n  return dom\r\n}\r\n\r\nfunction toggleComenziNetrimise() {\r\n  var comenziTrimise = document.getElementById('comenziTrimise')\r\n  var table = document.getElementById('xmlTableBody')\r\n  if (comenziTrimise.checked) {\r\n    //hide rows with <i class=\"fas fa-xl fa-check-circle has-text-success\"></i> or all\r\n    var rows = table.getElementsByTagName('tr')\r\n    for (var i = 0; i < rows.length; i++) {\r\n      if (rows[i].innerHTML.indexOf('fa-check-circle') > -1) {\r\n        rows[i].style.display = 'none'\r\n      }\r\n    }\r\n  } else {\r\n    //show all rows\r\n    var rows = table.getElementsByTagName('tr')\r\n    for (var i = 0; i < rows.length; i++) {\r\n      rows[i].style.display = ''\r\n    }\r\n  }\r\n}\r\n\r\nfunction mandatoryFields() {\r\n  //get file from input id=\"xsdFile\"\r\n  var xsdFile = document.getElementById('xsdFile').files[0]\r\n  console.log('xsdFile', xsdFile)\r\n  //find elements without minOccurs=\"0\"\r\n  var mandatoryFields = []\r\n  var nonMandatoryFields = []\r\n  var reader = new FileReader()\r\n  reader.readAsText(xsdFile)\r\n  reader.onload = function (e) {\r\n    var xsd = e.target.result\r\n    var parser = new DOMParser()\r\n    var xsdDom = parser.parseFromString(xsd, 'text/xml')\r\n    //find and remove element name='DXInvoice' from xsdDom\r\n    var dxInvoice = xsdDom.getElementsByTagName('xs:element')[0]\r\n    dxInvoice.parentNode.removeChild(dxInvoice)\r\n    var elements = xsdDom.getElementsByTagName('xs:element')\r\n    console.log('numar elemente', elements.length)\r\n    for (var i = 0; i < elements.length; i++) {\r\n      var element = elements[i]\r\n      //find parents\r\n      var parents = []\r\n      var parent = element.parentNode\r\n      while (parent.nodeName != 'xs:schema') {\r\n        parents.push(parent)\r\n        parent = parent.parentNode\r\n      }\r\n      var path = ''\r\n      for (var j = parents.length - 1; j >= 0; j--) {\r\n        var parentName = parents[j].getAttribute('name')\r\n        if (parentName) {\r\n          path += parentName + '/'\r\n        }\r\n      }\r\n      path += element.getAttribute('name')\r\n      path = path.replace('InvoiceType', 'DXInvoice/Invoice')\r\n      path = path.replace('InvoiceLineType', 'DXInvoice/InvoiceLine')\r\n\r\n      recursiveSearchInElement(element, path)\r\n\r\n      function recursiveSearchInElement(element, path) {\r\n        /*\r\n      <xs:annotation>\r\n\t\t\t\t\t<xs:documentation>Invoice Currency</xs:documentation>\r\n\t\t\t\t</xs:annotation>\r\n      */\r\n        //get documentation value if exists\r\n        var documentationValue = ''\r\n        var annotation = element.getElementsByTagName('xs:annotation')[0]\r\n        if (annotation) {\r\n          var documentation = annotation.getElementsByTagName('xs:documentation')[0]\r\n          if (documentation) {\r\n            documentationValue = documentation.innerHTML\r\n          }\r\n        }\r\n        if (element.hasAttribute('minOccurs') && element.getAttribute('minOccurs') == '0') {\r\n          nonMandatoryFields.push({\r\n            name: element.getAttribute('name'),\r\n            type: element.getAttribute('type'),\r\n            path: path,\r\n            documentation: documentationValue,\r\n            orderNumber: i + 1\r\n          })\r\n        } else {\r\n          //nu are minOccurs deci este obligatoriu, dar daca este complexType nu inregistrez, vor fi inregistrate elementele care il compun\r\n          var isComplexType = element.getElementsByTagName('xs:complexType')[0]\r\n          var needsFurtherInvestigation = false\r\n          //if type is in form commons:something then needs further investigation with commons.xsd\r\n          needsFurtherInvestigation = element.getAttribute('type')\r\n            ? element.getAttribute('type').includes('commons:')\r\n            : false\r\n          if (!isComplexType)\r\n            if (!needsFurtherInvestigation) {\r\n              mandatoryFields.push({\r\n                name: element.getAttribute('name'),\r\n                type: element.getAttribute('type'),\r\n                path: path,\r\n                documentation: documentationValue,\r\n                orderNumber: i + 1\r\n              })\r\n            } else {\r\n              recursiveSearchForTypes(\r\n                element.getAttribute('type').split(':')[1],\r\n                i + 1,\r\n                mandatoryFields,\r\n                nonMandatoryFields,\r\n                path\r\n              )\r\n            }\r\n        }\r\n      }\r\n    }\r\n    console.log('mandatoryFields', mandatoryFields)\r\n    console.log('nonMandatoryFields', nonMandatoryFields)\r\n\r\n    displayMandatoryFields(mandatoryFields, nonMandatoryFields)\r\n\r\n    if (document.getElementById('xmlAsTable').getElementsByTagName('tbody')[0])\r\n      setMandatoryAndFieldOrder(\r\n        mandatoryFields,\r\n        nonMandatoryFields,\r\n        document.getElementById('xmlAsTable').getElementsByTagName('tbody')[0]\r\n      )\r\n  }\r\n\r\n  function displayMandatoryFields(mandatoryFields, nonMandatoryFields) {\r\n    var label = document.getElementById('mandatoryFieldsLabel')\r\n    label.innerHTML = 'Obligatorii: ' + mandatoryFields.length\r\n    //get table id=\"mandatoryFieldsTable\" and create mandatory data\r\n    var table = document.getElementById('mandatoryFieldsTable')\r\n    //empty table\r\n    table.innerHTML = ''\r\n    //Create table head\r\n    var thead = table.createTHead()\r\n    var row = thead.insertRow()\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Name'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Type'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Path'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Documentation'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Order Number'\r\n    row.appendChild(th)\r\n\r\n    //create table body\r\n    var tbody = table.createTBody()\r\n    mandatoryFields.forEach((item) => {\r\n      var tr = document.createElement('tr')\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.name\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.type\r\n      //onclick event\r\n      td.onclick = function () {\r\n        showCommonType(\r\n          this.innerHTML.split(':')[1],\r\n          item.orderNumber,\r\n          mandatoryFields,\r\n          nonMandatoryFields,\r\n          item.path\r\n        )\r\n      }\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.path\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.documentation\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.orderNumber\r\n      tr.appendChild(td)\r\n      tbody.appendChild(tr)\r\n    })\r\n\r\n    //label\r\n    var label = document.getElementById('nonMandatoryFieldsLabel')\r\n    label.innerHTML = 'Facultative: ' + nonMandatoryFields.length\r\n    //table id=\"nonMandatoryFieldsTable\"\r\n    var table = document.getElementById('nonMandatoryFieldsTable')\r\n    //empty table\r\n    table.innerHTML = ''\r\n    //Create table head\r\n    var thead = table.createTHead()\r\n    var row = thead.insertRow()\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Name'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Type'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Path'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Documentation'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Order Number'\r\n    row.appendChild(th)\r\n\r\n    //create table body\r\n    var tbody = table.createTBody()\r\n    nonMandatoryFields.forEach((item) => {\r\n      var tr = document.createElement('tr')\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.name\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.type\r\n      //onclick event\r\n      td.onclick = function () {\r\n        showCommonType(\r\n          this.innerHTML.split(':')[1],\r\n          item.orderNumber,\r\n          mandatoryFields,\r\n          nonMandatoryFields,\r\n          item.path\r\n        )\r\n      }\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.path\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.documentation\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.orderNumber\r\n      tr.appendChild(td)\r\n      tbody.appendChild(tr)\r\n    })\r\n  }\r\n\r\n  function setMandatoryAndFieldOrder(mandatoryFields, nonMandatoryFields, table) {\r\n    //in table id=\"xmlAsTable\" fill column \"Mandatory\" with \"Yes\" or \"No\" by path\r\n    var rows = table.getElementsByTagName('tr')\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var row = rows[i]\r\n      var cell = row.getElementsByClassName('xmlPath')[0]\r\n      var path = cell.innerHTML\r\n      mandatoryFields.every((item) => {\r\n        if (item.path == path) {\r\n          cell = row.getElementsByClassName('mandatory')[0]\r\n          //child select\r\n          cell.value = true\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n    }\r\n\r\n    //xmlOrderNumber\r\n    rows = table.getElementsByTagName('tr')\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var row = rows[i]\r\n      var cell = row.getElementsByClassName('xmlPath')[0]\r\n      var path = cell.innerHTML\r\n      mandatoryFields.every((item) => {\r\n        console.log('path', path, 'item.path', item.path)\r\n        //if (item.path == path) {\r\n        //if (path.includes(item.path)) {\r\n        if (path == item.path) {\r\n          cell = row.getElementsByClassName('xmlOrder')[0]\r\n          cell.innerHTML = item.orderNumber\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      nonMandatoryFields.every((item) => {\r\n        if (item.path == path) {\r\n          //if (path.includes(item.path)) {\r\n          cell = row.getElementsByClassName('xmlOrder')[0]\r\n          cell.innerHTML = item.orderNumber\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nfunction loadCommonXSD() {\r\n  //1.get file from input id=\"xsdCommonsFile\"\r\n  //2. create dom from file\r\n  var xsdFile = document.getElementById('xsdCommonsFile').files[0]\r\n  if (!xsdFile) {\r\n    alert('Select XSD Commons file')\r\n    return\r\n  }\r\n  console.log('xsdFile', xsdFile)\r\n\r\n  //find elements without minOccurs=\"0\"\r\n  var reader = new FileReader()\r\n  reader.readAsText(xsdFile)\r\n  reader.onload = function (e) {\r\n    var xsd = e.target.result\r\n    var parser = new DOMParser()\r\n    xsdCommonsDom = parser.parseFromString(xsd, 'text/xml')\r\n  }\r\n}\r\n\r\nvar xsdCommonsDom = null\r\nfunction showCommonType(type, orderNumber, mandatoryFields, nonMandatoryFields, path) {\r\n  //commons:PartyType => search for PartyType and get mandatory fields and non mandatory fields\r\n  var thisMandatoryFields = []\r\n  var thisNonMandatoryFields = []\r\n  var searchFor = type\r\n  //search for attributes with name = searchFor\r\n  var response = recursiveSearchForTypes(searchFor, orderNumber, mandatoryFields, nonMandatoryFields, path)\r\n  thisMandatoryFields = response.thisMandatoryFields\r\n  thisNonMandatoryFields = response.thisNonMandatoryFields\r\n\r\n  displayDetails()\r\n\r\n  function displayDetails() {\r\n    //dislay modal with id-\"commonsDigging\" with mandatoryFields and nonMandatoryFields\r\n    //from bulma docs: To activate the modal, just add the is-active modifier on the .modal container.\r\n    var modal = document.getElementById('commonsDigging')\r\n    //add listener to modal close button\r\n    var modalClose = modal.getElementsByClassName('modal-close')[0]\r\n    modalClose.onclick = function () {\r\n      modal.classList.remove('is-active')\r\n    }\r\n    modal.classList.add('is-active')\r\n    //modal-content with data mentioned above\r\n    var modalContent = modal.getElementsByClassName('modal-content')[0]\r\n    //empty modalContent\r\n    modalContent.innerHTML = ''\r\n    //create table in modalContent\r\n    var table = document.createElement('table')\r\n    modalContent.appendChild(table)\r\n    table.classList.add('table')\r\n    table.classList.add('is-striped')\r\n    table.classList.add('is-hoverable')\r\n    table.classList.add('is-fullwidth')\r\n    table.classList.add('is-narrow')\r\n    table.classList.add('is-size-7')\r\n    //create table head\r\n    var thead = table.createTHead()\r\n    var row = thead.insertRow()\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Name'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Type'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Path'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Documentation'\r\n    row.appendChild(th)\r\n    var th = document.createElement('th')\r\n    th.innerHTML = 'Order Number'\r\n    row.appendChild(th)\r\n    //create table body\r\n    var tbody = table.createTBody()\r\n    thisMandatoryFields.forEach((item) => {\r\n      var tr = document.createElement('tr')\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.name\r\n      //color\r\n      td.style.color = 'red'\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.type\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.path\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.documentation\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.orderNumber\r\n      tr.appendChild(td)\r\n      tbody.appendChild(tr)\r\n    })\r\n    thisNonMandatoryFields.forEach((item) => {\r\n      var tr = document.createElement('tr')\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.name\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.type\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.path\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.documentation\r\n      tr.appendChild(td)\r\n      var td = document.createElement('td')\r\n      td.innerHTML = item.orderNumber\r\n      tr.appendChild(td)\r\n      tbody.appendChild(tr)\r\n    })\r\n  }\r\n}\r\n\r\nfunction recursiveSearchForTypes(searchFor, orderNumber, mandatoryFields, nonMandatoryFields, path) {\r\n  if (!xsdCommonsDom) {\r\n    console.log('xsdCommonsDom not ready')\r\n    return\r\n  }\r\n  var thisMandatoryFields = []\r\n  var thisNonMandatoryFields = []\r\n  var mySearchedComplexType\r\n  //search xs:complexType name = searchFor\r\n  //when found, search for all children xs:element with minOccurs=\"0\" and add them to nonMandatoryFields\r\n  //if not minOccurs=\"0\" or even doesn't have minOccurs, add them to mandatoryFields\r\n  var myComplexType = [...xsdCommonsDom.getElementsByTagName('xs:complexType')]\r\n  if (myComplexType.length > 0) {\r\n    mySearchedComplexType = myComplexType.find((item) => {\r\n      return item.getAttribute('name') == searchFor\r\n    })\r\n\r\n    if (!mySearchedComplexType) {\r\n      console.log('mySearchedComplexType not found')\r\n      return { thisMandatoryFields: thisMandatoryFields, thisNonMandatoryFields: thisNonMandatoryFields }\r\n    }\r\n    console.log('searchFor', searchFor, 'mySearchedComplexType', mySearchedComplexType)\r\n    //get all xs:element children\r\n    var myElements = mySearchedComplexType.getElementsByTagName('xs:element')\r\n    var arrMyElements = Array.from(myElements)\r\n    arrMyElements.forEach((item, index) => {\r\n      var parents = []\r\n      var parent = item.parentNode\r\n      //while not mySeachedComplexType\r\n      while (parent.getAttribute('name') != searchFor) {\r\n        parents.push(parent)\r\n        parent = parent.parentNode\r\n      }\r\n      //construct path\r\n      var path1 = ''\r\n      for (var j = parents.length - 1; j >= 0; j--) {\r\n        var parentName = parents[j].getAttribute('name')\r\n        if (parentName) {\r\n          path1 += parentName + '/'\r\n        }\r\n      }\r\n      var keeper = {\r\n        name: item.getAttribute('name'),\r\n        type: item.getAttribute('type'),\r\n        path: path + '/' + path1 + item.getAttribute('name'),\r\n        documentation: '',\r\n        orderNumber: parseFloat(orderNumber) + (index + 1) * 0.001\r\n      }\r\n      if (item.hasAttribute('minOccurs') && item.getAttribute('minOccurs') == '0') {\r\n        nonMandatoryFields.push(keeper)\r\n        thisNonMandatoryFields.push(keeper)\r\n      } else {\r\n        mandatoryFields.push(keeper)\r\n        thisMandatoryFields.push(keeper)\r\n      }\r\n      //try further investigation with commons.xsd by type\r\n      var type = item.getAttribute('type')\r\n      listOfPrimitiveTypes = [\r\n        'xs:string',\r\n        'xs:decimal',\r\n        'xs:integer',\r\n        'xs:boolean',\r\n        'xs:date',\r\n        'xs:time',\r\n        'xs:dateTime',\r\n        'xs:duration',\r\n        'xs:hexBinary',\r\n        'xs:base64Binary',\r\n        'xs:anyURI',\r\n        'xs:QName',\r\n        'xs:NOTATION'\r\n      ]\r\n      if (listOfPrimitiveTypes.indexOf(type) == -1) {\r\n        if (type) {\r\n          var response = recursiveSearchForTypes(\r\n            type,\r\n            keeper.orderNumber,\r\n            mandatoryFields,\r\n            nonMandatoryFields,\r\n            keeper.path\r\n          )\r\n          thisMandatoryFields = thisMandatoryFields.concat(response.thisMandatoryFields)\r\n          thisNonMandatoryFields = thisNonMandatoryFields.concat(response.thisNonMandatoryFields)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  console.log('thisMandatoryFields', thisMandatoryFields, 'thisNonMandatoryFields', thisNonMandatoryFields)\r\n  return { thisMandatoryFields: thisMandatoryFields, thisNonMandatoryFields: thisNonMandatoryFields }\r\n}\r\n\r\n//create function to close bulma modal on escape key\r\n//from bulma docs: To activate the modal, just add the is-active modifier on the .modal container.\r\ndocument.addEventListener('keydown', function (event) {\r\n  var modal = document.getElementById('commonsDigging')\r\n  if (event.key == 'Escape') {\r\n    modal.classList.remove('is-active')\r\n  }\r\n})\r\n\r\n//if user refreshes page, then message alert localStorageRetailer\r\nwindow.onload = function () {\r\n  var params = {}\r\n  params['query'] = {}\r\n  params['query']['sqlQuery'] =\r\n    'select name from trdr where sodtype=13 and trdr=' + localStorage.getItem('trdr_retailer')\r\n  client\r\n    .service('getDataset')\r\n    .find(params)\r\n    .then((res) => {\r\n      if (res.data) {\r\n        //alert(res.data)\r\n        //get id of div id=\"retailerName\"\r\n        var retailerName = document.getElementById('retailerName')\r\n        retailerName.innerHTML = res.data\r\n      }\r\n    })\r\n}\r\n\r\nfunction sendAllFacturi() {\r\n  alert('To be implemented')\r\n}\r\n\r\n//onClick event for id=\"facturiTrimise\" to show only facturi netrimise sau toate facturile\r\n//netrimise means <td class=\"trimis\"> contains <i class=\"fas fa-xl fa-times-circle has-text-danger\">\r\n\r\nfunction toggleFacturiNetrimise() {\r\n  var facturiTrimise = document.getElementById('facturiTrimise')\r\n  var table = document.getElementById('facturiTableBody')\r\n  if (facturiTrimise.checked) {\r\n    //show only rows with cell class=\"trimis\" innerHTML empty if checkbox is checked, else show all rows\r\n    var rows = table.getElementsByTagName('tr')\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var row = rows[i]\r\n      var cell = row.getElementsByClassName('trimis')[0]\r\n      //contains <i class=\"fas fa-xl fa-check-circle has-text-danger\">\r\n      if (cell.innerHTML.includes('fa-check-circle')) {\r\n        row.style.display = 'none'\r\n      }\r\n    }\r\n  } else {\r\n    var rows = table.getElementsByTagName('tr')\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var row = rows[i]\r\n      row.style.display = ''\r\n    }\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.cab1be00.js.map","sourceRoot":"/__parcel_source_root/"}